

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Fri Mar 22 13:55:10 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    15                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    17   000000                     
    18                           ; Generated 17/10/2023 GMT
    19                           ; 
    20                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution. Publication is not required when
    34                           ;        this file is used in an embedded application.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC18F4550 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52   000000                     
    53                           	psect	idataCOMRAM
    54   00096E                     __pidataCOMRAM:
    55                           	callstack 0
    56                           
    57                           ;initializer for main@F3231
    58   00096E  10                 	db	16
    59   00096F  18                 	db	24
    60   000970  1C                 	db	28
    61   000971  FE                 	db	254
    62   000972  FE                 	db	254
    63   000973  1C                 	db	28
    64   000974  18                 	db	24
    65   000975  10                 	db	16
    66                           
    67                           ;initializer for _acumulador
    68   000976  0007               	dw	7
    69                           
    70                           	psect	smallconst
    71   000800                     __psmallconst:
    72                           	callstack 0
    73   000800  00                 	db	0
    74   000801                     main@F3233:
    75                           	callstack 0
    76   000801  01                 	db	1
    77   000802  E3                 	db	227
    78   000803  F7                 	db	247
    79   000804  E3                 	db	227
    80   000805  D5                 	db	213
    81   000806  F7                 	db	247
    82   000807  EB                 	db	235
    83   000808  EB                 	db	235
    84   000809                     __end_ofmain@F3233:
    85                           	callstack 0
    86   000000                     _T0CONbits	set	4053
    87   000000                     _PORTAbits	set	3968
    88   000000                     _LATAbits	set	3977
    89   000000                     _TRISAbits	set	3986
    90   000000                     _ADCON1bits	set	4033
    91   000000                     _TMR0	set	4054
    92   000000                     _T0CON	set	4053
    93   000000                     _TRISC	set	3988
    94   000000                     _TRISD	set	3989
    95   000000                     _LATCbits	set	3979
    96   000000                     _LATD	set	3980
    97   000809  00                 	db	0	; dummy byte at the end
    98   000000                     
    99                           ; #config settings
   100                           
   101                           	psect	cinit
   102   00092A                     __pcinit:
   103                           	callstack 0
   104   00092A                     start_initialization:
   105                           	callstack 0
   106   00092A                     __initialization:
   107                           	callstack 0
   108                           
   109                           ; Initialize objects allocated to COMRAM (10 bytes)
   110                           ; load TBLPTR registers with __pidataCOMRAM
   111   00092A  0E6E               	movlw	low __pidataCOMRAM
   112   00092C  6EF6               	movwf	tblptrl,c
   113   00092E  0E09               	movlw	high __pidataCOMRAM
   114   000930  6EF7               	movwf	tblptrh,c
   115   000932  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   116   000934  6EF8               	movwf	tblptru,c
   117   000936  EE00  F020         	lfsr	0,__pdataCOMRAM
   118   00093A  EE10 F00A          	lfsr	1,10
   119   00093E                     copy_data0:
   120   00093E  0009               	tblrd		*+
   121   000940  CFF5 FFEE          	movff	tablat,postinc0
   122   000944  50E5               	movf	postdec1,w,c
   123   000946  50E1               	movf	fsr1l,w,c
   124   000948  E1FA               	bnz	copy_data0
   125   00094A                     end_of_initialization:
   126                           	callstack 0
   127   00094A                     __end_of__initialization:
   128                           	callstack 0
   129   00094A  0E00               	movlw	low (__Lsmallconst shr (0+16))
   130   00094C  6EF8               	movwf	tblptru,c
   131   00094E  0E08               	movlw	high __Lsmallconst
   132   000950  6EF7               	movwf	tblptrh,c
   133   000952  0100               	movlb	0
   134   000954  EF42  F004         	goto	_main	;jump to C main() function
   135                           
   136                           	psect	dataCOMRAM
   137   000020                     __pdataCOMRAM:
   138                           	callstack 0
   139   000020                     main@F3231:
   140                           	callstack 0
   141   000020                     	ds	8
   142   000028                     _acumulador:
   143                           	callstack 0
   144   000028                     	ds	2
   145                           
   146                           	psect	cstackCOMRAM
   147   000001                     __pcstackCOMRAM:
   148                           	callstack 0
   149   000001                     Send_Byte_Data@b_m1:
   150                           	callstack 0
   151                           
   152                           ; 1 bytes @ 0x0
   153   000001                     	ds	1
   154   000002                     Send_Byte_Data@i:
   155                           	callstack 0
   156                           
   157                           ; 1 bytes @ 0x1
   158   000002                     	ds	1
   159   000003                     drawCoord@fila_in:
   160                           	callstack 0
   161                           
   162                           ; 2 bytes @ 0x2
   163   000003                     	ds	2
   164   000005                     drawCoord@columna_in:
   165                           	callstack 0
   166                           
   167                           ; 2 bytes @ 0x4
   168   000005                     	ds	2
   169   000007                     ??_drawCoord:
   170                           
   171                           ; 1 bytes @ 0x6
   172   000007                     	ds	2
   173   000009                     drawCoord@col_in:
   174                           	callstack 0
   175                           
   176                           ; 2 bytes @ 0x8
   177   000009                     	ds	2
   178   00000B                     drawCoord@fil_in:
   179                           	callstack 0
   180                           
   181                           ; 2 bytes @ 0xA
   182   00000B                     	ds	2
   183   00000D                     drawCoord@fila:
   184                           	callstack 0
   185                           
   186                           ; 1 bytes @ 0xC
   187   00000D                     	ds	1
   188   00000E                     drawCoord@columna:
   189                           	callstack 0
   190                           
   191                           ; 1 bytes @ 0xD
   192   00000E                     	ds	1
   193   00000F                     ??_main:
   194                           
   195                           ; 1 bytes @ 0xE
   196   00000F                     	ds	1
   197   000010                     main@bicubic:
   198                           	callstack 0
   199                           
   200                           ; 8 bytes @ 0xF
   201   000010                     	ds	8
   202   000018                     main@peaton_stop:
   203                           	callstack 0
   204                           
   205                           ; 8 bytes @ 0x17
   206   000018                     	ds	8
   207                           
   208 ;;
   209 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   210 ;;
   211 ;; *************** function _main *****************
   212 ;; Defined at:
   213 ;;		line 91 in file "pruebilla.c"
   214 ;; Parameters:    Size  Location     Type
   215 ;;		None
   216 ;; Auto vars:     Size  Location     Type
   217 ;;  peaton_stop     8   23[COMRAM] const unsigned char [8]
   218 ;;  bicubic         8   15[COMRAM] unsigned char [8]
   219 ;;  CONTADOR        2    0        int 
   220 ;;  contador_bin    1    0        unsigned char 
   221 ;; Return value:  Size  Location     Type
   222 ;;                  1    wreg      void 
   223 ;; Registers used:
   224 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   225 ;; Tracked objects:
   226 ;;		On entry : 0/0
   227 ;;		On exit  : 0/0
   228 ;;		Unchanged: 0/0
   229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   230 ;;      Params:         0       0       0       0       0       0       0       0       0
   231 ;;      Locals:        16       0       0       0       0       0       0       0       0
   232 ;;      Temps:          1       0       0       0       0       0       0       0       0
   233 ;;      Totals:        17       0       0       0       0       0       0       0       0
   234 ;;Total ram usage:       17 bytes
   235 ;; Hardware stack levels required when called: 2
   236 ;; This function calls:
   237 ;;		_drawCoord
   238 ;;		_inicializarSensor
   239 ;; This function is called by:
   240 ;;		Startup code after reset
   241 ;; This function uses a non-reentrant model
   242 ;;
   243                           
   244                           	psect	text0
   245   000884                     __ptext0:
   246                           	callstack 0
   247   000884                     _main:
   248                           	callstack 29
   249   000884                     
   250                           ;pruebilla.c: 94:     uint8_t bicubic[8]={0x10,0x18,0x1c,0xfe,0xfe,0x1c,0x18,0x10};
   251   000884  EE20  F020         	lfsr	2,main@F3231
   252   000888  EE10  F010         	lfsr	1,main@bicubic
   253   00088C  0E07               	movlw	7
   254   00088E                     u111:
   255   00088E  CFDB FFE3          	movff	plusw2,plusw1
   256   000892  06E8               	decf	wreg,f,c
   257   000894  E2FC               	bc	u111
   258   000896                     
   259                           ;pruebilla.c: 96:     const uint8_t peaton_stop[8] = {0x01, 0xe3, 0xf7, 0xe3, 0xd5, 0xf7
      +                          , 0xeb, 0xeb};
   260   000896  0E01               	movlw	low main@F3233
   261   000898  6EF6               	movwf	tblptrl,c
   262   00089A                     	if	0	;There is only one active tblptr byte
   263   00089A                     	endif
   264   00089A                     	if	0	;There are less than 3 active tblptr bytes
   265   00089A                     	endif
   266   00089A  EE20  F018         	lfsr	2,main@peaton_stop
   267   00089E  0E07               	movlw	7
   268   0008A0                     u120:
   269   0008A0  0009               	tblrd		*+
   270   0008A2  CFF5 FFDE          	movff	tablat,postinc2
   271   0008A6  06E8               	decf	wreg,f,c
   272   0008A8  E2FB               	bc	u120
   273   0008AA                     
   274                           ;pruebilla.c: 107:     inicializarSensor();
   275   0008AA  ECAC  F004         	call	_inicializarSensor	;wreg free
   276   0008AE                     
   277                           ;pruebilla.c: 114:     TRISD = 0x00;
   278   0008AE  0E00               	movlw	0
   279   0008B0  6E95               	movwf	149,c	;volatile
   280   0008B2                     
   281                           ;pruebilla.c: 115:     TRISC = 0x00;
   282   0008B2  0E00               	movlw	0
   283   0008B4  6E94               	movwf	148,c	;volatile
   284   0008B6                     
   285                           ;pruebilla.c: 116:     LATD = 0x00;
   286   0008B6  0E00               	movlw	0
   287   0008B8  6E8C               	movwf	140,c	;volatile
   288   0008BA                     
   289                           ;pruebilla.c: 117:     LATCbits.LC6=1;
   290   0008BA  8C8B               	bsf	139,6,c	;volatile
   291   0008BC                     l837:
   292                           
   293                           ;pruebilla.c: 120:     {;pruebilla.c: 123:         _delay((unsigned long)((1)*(48000000/
      +                          4000.0)));
   294   0008BC  0E10               	movlw	16
   295   0008BE  6E0F               	movwf	??_main^0,c
   296   0008C0  0E94               	movlw	148
   297   0008C2                     u137:
   298   0008C2  2EE8               	decfsz	wreg,f,c
   299   0008C4  D7FE               	bra	u137
   300   0008C6  2E0F               	decfsz	??_main^0,f,c
   301   0008C8  D7FC               	bra	u137
   302   0008CA  D000               	nop2	
   303   0008CC                     
   304                           ;pruebilla.c: 125:         drawCoord(0,0);
   305   0008CC  0E00               	movlw	0
   306   0008CE  6E04               	movwf	(drawCoord@fila_in+1)^0,c
   307   0008D0  0E00               	movlw	0
   308   0008D2  6E03               	movwf	drawCoord@fila_in^0,c
   309   0008D4  0E00               	movlw	0
   310   0008D6  6E06               	movwf	(drawCoord@columna_in+1)^0,c
   311   0008D8  0E00               	movlw	0
   312   0008DA  6E05               	movwf	drawCoord@columna_in^0,c
   313   0008DC  EC05  F004         	call	_drawCoord	;wreg free
   314   0008E0  EF5E  F004         	goto	l837
   315   0008E4  EF00  F000         	goto	start
   316   0008E8                     __end_of_main:
   317                           	callstack 0
   318                           
   319 ;; *************** function _inicializarSensor *****************
   320 ;; Defined at:
   321 ;;		line 30 in file "pruebilla.c"
   322 ;; Parameters:    Size  Location     Type
   323 ;;		None
   324 ;; Auto vars:     Size  Location     Type
   325 ;;		None
   326 ;; Return value:  Size  Location     Type
   327 ;;                  1    wreg      void 
   328 ;; Registers used:
   329 ;;		wreg, status,2
   330 ;; Tracked objects:
   331 ;;		On entry : 0/0
   332 ;;		On exit  : 0/0
   333 ;;		Unchanged: 0/0
   334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   335 ;;      Params:         0       0       0       0       0       0       0       0       0
   336 ;;      Locals:         0       0       0       0       0       0       0       0       0
   337 ;;      Temps:          0       0       0       0       0       0       0       0       0
   338 ;;      Totals:         0       0       0       0       0       0       0       0       0
   339 ;;Total ram usage:        0 bytes
   340 ;; Hardware stack levels used: 1
   341 ;; This function calls:
   342 ;;		Nothing
   343 ;; This function is called by:
   344 ;;		_main
   345 ;; This function uses a non-reentrant model
   346 ;;
   347                           
   348                           	psect	text1
   349   000958                     __ptext1:
   350                           	callstack 0
   351   000958                     _inicializarSensor:
   352                           	callstack 30
   353   000958                     
   354                           ;pruebilla.c: 31:     ADCON1bits.PCFG=0x0f;
   355   000958  0E0F               	movlw	15
   356   00095A  12C1               	iorwf	193,f,c	;volatile
   357   00095C                     
   358                           ;pruebilla.c: 32:     TRISAbits.RA0 = 0;
   359   00095C  9092               	bcf	146,0,c	;volatile
   360   00095E                     
   361                           ;pruebilla.c: 33:     TRISAbits.RA1 = 1;
   362   00095E  8292               	bsf	146,1,c	;volatile
   363                           
   364                           ;pruebilla.c: 34:     T0CON=0x88;
   365   000960  0E88               	movlw	136
   366   000962  6ED5               	movwf	213,c	;volatile
   367                           
   368                           ;pruebilla.c: 35:     TMR0=0;
   369   000964  0E00               	movlw	0
   370   000966  6ED7               	movwf	215,c	;volatile
   371   000968  0E00               	movlw	0
   372   00096A  6ED6               	movwf	214,c	;volatile
   373   00096C  0012               	return		;funcret
   374   00096E                     __end_of_inicializarSensor:
   375                           	callstack 0
   376                           
   377 ;; *************** function _drawCoord *****************
   378 ;; Defined at:
   379 ;;		line 79 in file "pruebilla.c"
   380 ;; Parameters:    Size  Location     Type
   381 ;;  fila_in         2    2[COMRAM] int 
   382 ;;  columna_in      2    4[COMRAM] int 
   383 ;; Auto vars:     Size  Location     Type
   384 ;;  fil_in          2   10[COMRAM] int 
   385 ;;  col_in          2    8[COMRAM] int 
   386 ;;  columna         1   13[COMRAM] unsigned char 
   387 ;;  fila            1   12[COMRAM] unsigned char 
   388 ;; Return value:  Size  Location     Type
   389 ;;                  1    wreg      void 
   390 ;; Registers used:
   391 ;;		wreg, status,2, status,0, cstack
   392 ;; Tracked objects:
   393 ;;		On entry : 0/0
   394 ;;		On exit  : 0/0
   395 ;;		Unchanged: 0/0
   396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   397 ;;      Params:         4       0       0       0       0       0       0       0       0
   398 ;;      Locals:         6       0       0       0       0       0       0       0       0
   399 ;;      Temps:          2       0       0       0       0       0       0       0       0
   400 ;;      Totals:        12       0       0       0       0       0       0       0       0
   401 ;;Total ram usage:       12 bytes
   402 ;; Hardware stack levels used: 1
   403 ;; Hardware stack levels required when called: 1
   404 ;; This function calls:
   405 ;;		_Send_Byte_Data
   406 ;; This function is called by:
   407 ;;		_main
   408 ;; This function uses a non-reentrant model
   409 ;;
   410                           
   411                           	psect	text2
   412   00080A                     __ptext2:
   413                           	callstack 0
   414   00080A                     _drawCoord:
   415                           	callstack 29
   416   00080A                     
   417                           ;pruebilla.c: 80:         int col_in = fila_in;
   418   00080A  C003  F009         	movff	drawCoord@fila_in,drawCoord@col_in
   419   00080E  C004  F00A         	movff	drawCoord@fila_in+1,drawCoord@col_in+1
   420                           
   421                           ;pruebilla.c: 81:         int fil_in= columna_in;
   422   000812  C005  F00B         	movff	drawCoord@columna_in,drawCoord@fil_in
   423   000816  C006  F00C         	movff	drawCoord@columna_in+1,drawCoord@fil_in+1
   424   00081A                     
   425                           ;pruebilla.c: 82:         fil_in=(fil_in-7)*-1;
   426   00081A  0EF9               	movlw	249
   427   00081C  240B               	addwf	drawCoord@fil_in^0,w,c
   428   00081E  6E07               	movwf	??_drawCoord^0,c
   429   000820  0EFF               	movlw	255
   430   000822  200C               	addwfc	(drawCoord@fil_in+1)^0,w,c
   431   000824  6E08               	movwf	(??_drawCoord+1)^0,c
   432   000826  1E07               	comf	??_drawCoord^0,f,c
   433   000828  1E08               	comf	(??_drawCoord+1)^0,f,c
   434   00082A  4A07               	infsnz	??_drawCoord^0,f,c
   435   00082C  2A08               	incf	(??_drawCoord+1)^0,f,c
   436   00082E  C007  F00B         	movff	??_drawCoord,drawCoord@fil_in
   437   000832  C008  F00C         	movff	??_drawCoord+1,drawCoord@fil_in+1
   438   000836                     
   439                           ;pruebilla.c: 83:         uint8_t fila=0x80;
   440   000836  0E80               	movlw	128
   441   000838  6E0D               	movwf	drawCoord@fila^0,c
   442   00083A                     
   443                           ;pruebilla.c: 84:         uint8_t columna=0x80;
   444   00083A  0E80               	movlw	128
   445   00083C  6E0E               	movwf	drawCoord@columna^0,c
   446                           
   447                           ;pruebilla.c: 85:         columna=columna>>col_in;
   448   00083E  C009  F007         	movff	drawCoord@col_in,??_drawCoord
   449   000842  C00E  F008         	movff	drawCoord@columna,??_drawCoord+1
   450   000846  2A07               	incf	??_drawCoord^0,f,c
   451   000848  EF28  F004         	goto	u94
   452   00084C                     u95:
   453   00084C  90D8               	bcf	status,0,c
   454   00084E  3208               	rrcf	(??_drawCoord+1)^0,f,c
   455   000850                     u94:
   456   000850  2E07               	decfsz	??_drawCoord^0,f,c
   457   000852  EF26  F004         	goto	u95
   458   000856  5008               	movf	(??_drawCoord+1)^0,w,c
   459   000858  6E0E               	movwf	drawCoord@columna^0,c
   460                           
   461                           ;pruebilla.c: 86:         fila=fila>>fil_in;
   462   00085A  C00B  F007         	movff	drawCoord@fil_in,??_drawCoord
   463   00085E  C00D  F008         	movff	drawCoord@fila,??_drawCoord+1
   464   000862  2A07               	incf	??_drawCoord^0,f,c
   465   000864  EF36  F004         	goto	u104
   466   000868                     u105:
   467   000868  90D8               	bcf	status,0,c
   468   00086A  3208               	rrcf	(??_drawCoord+1)^0,f,c
   469   00086C                     u104:
   470   00086C  2E07               	decfsz	??_drawCoord^0,f,c
   471   00086E  EF34  F004         	goto	u105
   472   000872  5008               	movf	(??_drawCoord+1)^0,w,c
   473   000874  6E0D               	movwf	drawCoord@fila^0,c
   474   000876                     
   475                           ;pruebilla.c: 87:         LATD=fila;
   476   000876  C00D  FF8C         	movff	drawCoord@fila,3980	;volatile
   477   00087A                     
   478                           ;pruebilla.c: 88:         Send_Byte_Data(~columna);
   479   00087A  500E               	movf	drawCoord@columna^0,w,c
   480   00087C  0AFF               	xorlw	255
   481   00087E  EC74  F004         	call	_Send_Byte_Data
   482   000882  0012               	return		;funcret
   483   000884                     __end_of_drawCoord:
   484                           	callstack 0
   485                           
   486 ;; *************** function _Send_Byte_Data *****************
   487 ;; Defined at:
   488 ;;		line 67 in file "pruebilla.c"
   489 ;; Parameters:    Size  Location     Type
   490 ;;  b_m1            1    wreg     unsigned char 
   491 ;; Auto vars:     Size  Location     Type
   492 ;;  b_m1            1    0[COMRAM] unsigned char 
   493 ;;  i               1    1[COMRAM] unsigned char 
   494 ;; Return value:  Size  Location     Type
   495 ;;                  1    wreg      void 
   496 ;; Registers used:
   497 ;;		wreg, status,2, status,0
   498 ;; Tracked objects:
   499 ;;		On entry : 0/0
   500 ;;		On exit  : 0/0
   501 ;;		Unchanged: 0/0
   502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   503 ;;      Params:         0       0       0       0       0       0       0       0       0
   504 ;;      Locals:         2       0       0       0       0       0       0       0       0
   505 ;;      Temps:          0       0       0       0       0       0       0       0       0
   506 ;;      Totals:         2       0       0       0       0       0       0       0       0
   507 ;;Total ram usage:        2 bytes
   508 ;; Hardware stack levels used: 1
   509 ;; This function calls:
   510 ;;		Nothing
   511 ;; This function is called by:
   512 ;;		_drawCoord
   513 ;; This function uses a non-reentrant model
   514 ;;
   515                           
   516                           	psect	text3
   517   0008E8                     __ptext3:
   518                           	callstack 0
   519   0008E8                     _Send_Byte_Data:
   520                           	callstack 29
   521                           
   522                           ;incstack = 0
   523                           ;Send_Byte_Data@b_m1 stored from wreg
   524   0008E8  6E01               	movwf	Send_Byte_Data@b_m1^0,c
   525   0008EA                     
   526                           ;pruebilla.c: 67: void Send_Byte_Data(uint8_t b_m1);pruebilla.c: 68: {;pruebilla.c: 69: 
      +                              for(uint8_t i=0x80; i>0; i=i>>1)
   527   0008EA  0E80               	movlw	128
   528   0008EC  6E02               	movwf	Send_Byte_Data@i^0,c
   529   0008EE                     l747:
   530                           
   531                           ;pruebilla.c: 70:     {;pruebilla.c: 71:         (b_m1 & i) ? (LATCbits.LC2 = 1) : (LATC
      +                          bits.LC2 = 0);
   532   0008EE  5001               	movf	Send_Byte_Data@b_m1^0,w,c
   533   0008F0  1402               	andwf	Send_Byte_Data@i^0,w,c
   534   0008F2  0900               	iorlw	0
   535   0008F4  B4D8               	btfsc	status,2,c
   536   0008F6  EF7F  F004         	goto	u11
   537   0008FA  EF81  F004         	goto	u10
   538   0008FE                     u11:
   539   0008FE  EF84  F004         	goto	l47
   540   000902                     u10:
   541   000902  848B               	bsf	139,2,c	;volatile
   542   000904  EF85  F004         	goto	l49
   543   000908                     l47:
   544   000908  948B               	bcf	139,2,c	;volatile
   545   00090A                     l49:
   546                           
   547                           ;pruebilla.c: 72:         LATCbits.LC0 = 1;
   548   00090A  808B               	bsf	139,0,c	;volatile
   549                           
   550                           ;pruebilla.c: 73:         LATCbits.LC0 = 0;
   551   00090C  908B               	bcf	139,0,c	;volatile
   552   00090E                     
   553                           ;pruebilla.c: 74:     }
   554   00090E  90D8               	bcf	status,0,c
   555   000910  3002               	rrcf	Send_Byte_Data@i^0,w,c
   556   000912  6E02               	movwf	Send_Byte_Data@i^0,c
   557   000914  5002               	movf	Send_Byte_Data@i^0,w,c
   558   000916  A4D8               	btfss	status,2,c
   559   000918  EF90  F004         	goto	u21
   560   00091C  EF92  F004         	goto	u20
   561   000920                     u21:
   562   000920  EF77  F004         	goto	l747
   563   000924                     u20:
   564   000924                     
   565                           ;pruebilla.c: 75:     LATCbits.LC1 = 1;
   566   000924  828B               	bsf	139,1,c	;volatile
   567                           
   568                           ;pruebilla.c: 76:     LATCbits.LC1 = 0;
   569   000926  928B               	bcf	139,1,c	;volatile
   570   000928  0012               	return		;funcret
   571   00092A                     __end_of_Send_Byte_Data:
   572                           	callstack 0
   573                           
   574                           	psect	rparam
   575   000000                     
   576                           	psect	config
   577                           
   578                           ;Config register CONFIG1L @ 0x300000
   579                           ;	PLL Prescaler Selection bits
   580                           ;	PLLDIV = 2, Divide by 2 (8 MHz oscillator input)
   581                           ;	System Clock Postscaler Selection bits
   582                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
   583                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
   584                           ;	USBDIV = 2, USB clock source comes from the 96 MHz PLL divided by 2
   585   300000                     	org	3145728
   586   300000  21                 	db	33
   587                           
   588                           ;Config register CONFIG1H @ 0x300001
   589                           ;	Oscillator Selection bits
   590                           ;	FOSC = HSPLL_HS, HS oscillator, PLL enabled (HSPLL)
   591                           ;	Fail-Safe Clock Monitor Enable bit
   592                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   593                           ;	Internal/External Oscillator Switchover bit
   594                           ;	IESO = OFF, Oscillator Switchover mode disabled
   595   300001                     	org	3145729
   596   300001  0E                 	db	14
   597                           
   598                           ;Config register CONFIG2L @ 0x300002
   599                           ;	Power-up Timer Enable bit
   600                           ;	PWRT = OFF, PWRT disabled
   601                           ;	Brown-out Reset Enable bits
   602                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
   603                           ;	Brown-out Reset Voltage bits
   604                           ;	BORV = 3, Minimum setting 2.05V
   605                           ;	USB Voltage Regulator Enable bit
   606                           ;	VREGEN = OFF, USB voltage regulator disabled
   607   300002                     	org	3145730
   608   300002  19                 	db	25
   609                           
   610                           ;Config register CONFIG2H @ 0x300003
   611                           ;	Watchdog Timer Enable bit
   612                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   613                           ;	Watchdog Timer Postscale Select bits
   614                           ;	WDTPS = 32768, 1:32768
   615   300003                     	org	3145731
   616   300003  1E                 	db	30
   617                           
   618                           ; Padding undefined space
   619   300004                     	org	3145732
   620   300004  FF                 	db	255
   621                           
   622                           ;Config register CONFIG3H @ 0x300005
   623                           ;	CCP2 MUX bit
   624                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
   625                           ;	PORTB A/D Enable bit
   626                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
   627                           ;	Low-Power Timer 1 Oscillator Enable bit
   628                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   629                           ;	MCLR Pin Enable bit
   630                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   631   300005                     	org	3145733
   632   300005  81                 	db	129
   633                           
   634                           ;Config register CONFIG4L @ 0x300006
   635                           ;	Stack Full/Underflow Reset Enable bit
   636                           ;	STVREN = ON, Stack full/underflow will cause Reset
   637                           ;	Single-Supply ICSP Enable bit
   638                           ;	LVP = OFF, Single-Supply ICSP disabled
   639                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
   640                           ;	ICPRT = OFF, ICPORT disabled
   641                           ;	Extended Instruction Set Enable bit
   642                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   643                           ;	Background Debugger Enable bit
   644                           ;	DEBUG = 0x1, unprogrammed default
   645   300006                     	org	3145734
   646   300006  81                 	db	129
   647                           
   648                           ; Padding undefined space
   649   300007                     	org	3145735
   650   300007  FF                 	db	255
   651                           
   652                           ;Config register CONFIG5L @ 0x300008
   653                           ;	Code Protection bit
   654                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
   655                           ;	Code Protection bit
   656                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
   657                           ;	Code Protection bit
   658                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
   659                           ;	Code Protection bit
   660                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
   661   300008                     	org	3145736
   662   300008  0F                 	db	15
   663                           
   664                           ;Config register CONFIG5H @ 0x300009
   665                           ;	Boot Block Code Protection bit
   666                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
   667                           ;	Data EEPROM Code Protection bit
   668                           ;	CPD = OFF, Data EEPROM is not code-protected
   669   300009                     	org	3145737
   670   300009  C0                 	db	192
   671                           
   672                           ;Config register CONFIG6L @ 0x30000A
   673                           ;	Write Protection bit
   674                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
   675                           ;	Write Protection bit
   676                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
   677                           ;	Write Protection bit
   678                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
   679                           ;	Write Protection bit
   680                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
   681   30000A                     	org	3145738
   682   30000A  0F                 	db	15
   683                           
   684                           ;Config register CONFIG6H @ 0x30000B
   685                           ;	Configuration Register Write Protection bit
   686                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
   687                           ;	Boot Block Write Protection bit
   688                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
   689                           ;	Data EEPROM Write Protection bit
   690                           ;	WRTD = OFF, Data EEPROM is not write-protected
   691   30000B                     	org	3145739
   692   30000B  E0                 	db	224
   693                           
   694                           ;Config register CONFIG7L @ 0x30000C
   695                           ;	Table Read Protection bit
   696                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
   697                           ;	Table Read Protection bit
   698                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
   699                           ;	Table Read Protection bit
   700                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
   701                           ;	Table Read Protection bit
   702                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
   703   30000C                     	org	3145740
   704   30000C  0F                 	db	15
   705                           
   706                           ;Config register CONFIG7H @ 0x30000D
   707                           ;	Boot Block Table Read Protection bit
   708                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
   709   30000D                     	org	3145741
   710   30000D  40                 	db	64
   711                           tosu	equ	0xFFF
   712                           tosh	equ	0xFFE
   713                           tosl	equ	0xFFD
   714                           stkptr	equ	0xFFC
   715                           pclatu	equ	0xFFB
   716                           pclath	equ	0xFFA
   717                           pcl	equ	0xFF9
   718                           tblptru	equ	0xFF8
   719                           tblptrh	equ	0xFF7
   720                           tblptrl	equ	0xFF6
   721                           tablat	equ	0xFF5
   722                           prodh	equ	0xFF4
   723                           prodl	equ	0xFF3
   724                           indf0	equ	0xFEF
   725                           postinc0	equ	0xFEE
   726                           postdec0	equ	0xFED
   727                           preinc0	equ	0xFEC
   728                           plusw0	equ	0xFEB
   729                           fsr0h	equ	0xFEA
   730                           fsr0l	equ	0xFE9
   731                           wreg	equ	0xFE8
   732                           indf1	equ	0xFE7
   733                           postinc1	equ	0xFE6
   734                           postdec1	equ	0xFE5
   735                           preinc1	equ	0xFE4
   736                           plusw1	equ	0xFE3
   737                           fsr1h	equ	0xFE2
   738                           fsr1l	equ	0xFE1
   739                           bsr	equ	0xFE0
   740                           indf2	equ	0xFDF
   741                           postinc2	equ	0xFDE
   742                           postdec2	equ	0xFDD
   743                           preinc2	equ	0xFDC
   744                           plusw2	equ	0xFDB
   745                           fsr2h	equ	0xFDA
   746                           fsr2l	equ	0xFD9
   747                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    8
    Data        10
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     31      41
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           244      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_drawCoord
    _drawCoord->_Send_Byte_Data

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                20    20      0     436
                                             14 COMRAM    17    17      0
                          _drawCoord
                  _inicializarSensor
 ---------------------------------------------------------------------------------
 (1) _inicializarSensor                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _drawCoord                                           12     8      4     432
                                              2 COMRAM    12     8      4
                     _Send_Byte_Data
 ---------------------------------------------------------------------------------
 (2) _Send_Byte_Data                                       2     2      0      75
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _drawCoord
     _Send_Byte_Data
   _inicializarSensor

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM_1           400      0       0      32        0.0%
BIGRAM             3F3      0       0      33        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      17        0.0%
BANK7              100      0       0      18        0.0%
BITBANK6           100      0       0      15        0.0%
BANK6              100      0       0      16        0.0%
BITBANK5           100      0       0      13        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK3            F4      0       0       9        0.0%
BANK3               F4      0       0      10        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0       0       4        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     1F      29       1       43.2%
BITBIGSFR_1l        24      0       0      24        0.0%
BITBIGSFRlll        20      0       0      30        0.0%
BITBIGSFR_1h        12      0       0      23        0.0%
BITBIGSFR_5          D      0       0      19        0.0%
BITBIGSFRllh         8      0       0      29        0.0%
BITBIGSFRhh          6      0       0      25        0.0%
BITBIGSFRlhh         5      0       0      27        0.0%
BITBIGSFR_4          3      0       0      20        0.0%
BITBIGSFR_3          3      0       0      21        0.0%
BITBIGSFR_2          3      0       0      22        0.0%
BITBIGSFRlhl         1      0       0      28        0.0%
BITBIGSFRhl          1      0       0      26        0.0%
BIGSFR_5             0      0       0     200        0.0%
BIGSFR_4             0      0       0     200        0.0%
BIGSFR_3             0      0       0     200        0.0%
BIGSFR_2             0      0       0     200        0.0%
BIGSFR_1             0      0       0     200        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      29      31        0.0%
DATA                 0      0      29      34        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Fri Mar 22 13:55:10 2024

                       l50 0928                         l27 096C                         l45 0924  
                       l53 0882                         l47 0908                         l49 090A  
                       u10 0902                         u11 08FE                         u20 0924  
                       u21 0920                         u94 0850                         u95 084C  
                      l811 0836                        l741 08EA                        l813 083A  
                      l821 0896                        l751 090E                        l815 0876  
                      l807 080A                        l831 08B2                        l823 08AA  
                      l753 0914                        l817 087A                        l809 081A  
                      l833 08B6                        l825 08AA                        l747 08EE  
                      l755 0958                        l835 08BA                        l827 08AA  
                      l819 0884                        l749 0902                        l757 095C  
                      l837 08BC                        l829 08AE                        l759 095E  
                      l839 08CC                        u111 088E                        u104 086C  
                      u120 08A0                        u105 0868                        u137 08C2  
                      wreg 0FE8                main@bicubic 0010                       _LATD 0F8C  
                     _TMR0 0FD6              drawCoord@fila 000D                       _main 0884  
                     fsr1l 0FE1                       start 0000               ___param_bank 0000  
        _inicializarSensor 0958         ?_inicializarSensor 0001                      ?_main 0001  
                    _T0CON 0FD5                      _TRISC 0F94                      _TRISD 0F95  
      ??_inicializarSensor 0001                      tablat 0FF5                      plusw1 0FE3  
                    plusw2 0FDB                      status 0FD8  __end_of_inicializarSensor 096E  
          __initialization 092A               __end_of_main 08E8        drawCoord@columna_in 0005  
                   ??_main 000F              __activetblptr 0001           ??_Send_Byte_Data 0001  
          drawCoord@fil_in 000B            drawCoord@col_in 0009                     isa$std 0001  
             __pdataCOMRAM 0020               __mediumconst 0000                     tblptrh 0FF7  
                   tblptrl 0FF6                     tblptru 0FF8            Send_Byte_Data@i 0002  
               __accesstop 0060    __end_of__initialization 094A              ___rparam_used 0001  
           __pcstackCOMRAM 0001                 _acumulador 0028           drawCoord@fila_in 0003  
         drawCoord@columna 000E                    __Hparam 0000                    __Lparam 0000  
        __end_of_drawCoord 0884               __psmallconst 0800                    __pcinit 092A  
                  __ramtop 0800                    __ptext0 0884                    __ptext1 0958  
                  __ptext2 080A                    __ptext3 08E8                  _T0CONbits 0FD5  
     end_of_initialization 094A          __end_ofmain@F3233 0809                    postdec1 0FE5  
                  postinc0 0FEE                    postinc2 0FDE                  _PORTAbits 0F80  
                _TRISAbits 0F92              __pidataCOMRAM 096E        start_initialization 092A  
                _drawCoord 080A                __smallconst 0800                   _LATAbits 0F89  
                 _LATCbits 0F8B                  main@F3231 0020                  main@F3233 0801  
               ?_drawCoord 0003                 _ADCON1bits 0FC1                  copy_data0 093E  
          main@peaton_stop 0018             _Send_Byte_Data 08E8                   __Hrparam 0000  
                 __Lrparam 0000               __Lsmallconst 0800     __end_of_Send_Byte_Data 092A  
       Send_Byte_Data@b_m1 0001                   isa$xinst 0000                ??_drawCoord 0007  
          ?_Send_Byte_Data 0001  
