

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Thu Mar 21 17:31:07 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    14                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    15                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    16   000000                     
    17                           ; Generated 17/10/2023 GMT
    18                           ; 
    19                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution. Publication is not required when
    33                           ;        this file is used in an embedded application.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC18F4550 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51   000000                     
    52                           	psect	idataCOMRAM
    53   000942                     __pidataCOMRAM:
    54                           	callstack 0
    55                           
    56                           ;initializer for _acumulador
    57   000942  0007               	dw	7
    58                           
    59                           	psect	smallconst
    60   000800                     __psmallconst:
    61                           	callstack 0
    62   000800  00                 	db	0
    63   000801                     main@F3230:
    64                           	callstack 0
    65   000801  01                 	db	1
    66   000802  E3                 	db	227
    67   000803  F7                 	db	247
    68   000804  E3                 	db	227
    69   000805  D5                 	db	213
    70   000806  F7                 	db	247
    71   000807  EB                 	db	235
    72   000808  EB                 	db	235
    73   000809                     __end_ofmain@F3230:
    74                           	callstack 0
    75   000809                     main@F3228:
    76                           	callstack 0
    77   000809  10                 	db	16
    78   00080A  18                 	db	24
    79   00080B  1C                 	db	28
    80   00080C  FE                 	db	254
    81   00080D  FE                 	db	254
    82   00080E  1C                 	db	28
    83   00080F  18                 	db	24
    84   000810  10                 	db	16
    85   000811                     __end_ofmain@F3228:
    86                           	callstack 0
    87   000000                     _TRISC	set	3988
    88   000000                     _TRISD	set	3989
    89   000000                     _TMR1L	set	4046
    90   000000                     _TMR1H	set	4047
    91   000000                     _LATC	set	3979
    92   000000                     _T1CONbits	set	4045
    93   000000                     _PORTBbits	set	3969
    94   000000                     _LATBbits	set	3978
    95   000000                     _TRISBbits	set	3987
    96   000000                     _ADCON1bits	set	4033
    97   000000                     _T1CON	set	4045
    98   000000                     _LATD	set	3980
    99   000000                     _LATCbits	set	3979
   100   000811  00                 	db	0	; dummy byte at the end
   101   000000                     
   102                           ; #config settings
   103                           
   104                           	psect	cinit
   105   000910                     __pcinit:
   106                           	callstack 0
   107   000910                     start_initialization:
   108                           	callstack 0
   109   000910                     __initialization:
   110                           	callstack 0
   111                           
   112                           ; Initialize objects allocated to COMRAM (2 bytes)
   113                           ; load TBLPTR registers with __pidataCOMRAM
   114   000910  0E42               	movlw	low __pidataCOMRAM
   115   000912  6EF6               	movwf	tblptrl,c
   116   000914  0E09               	movlw	high __pidataCOMRAM
   117   000916  6EF7               	movwf	tblptrh,c
   118   000918  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   119   00091A  6EF8               	movwf	tblptru,c
   120   00091C  0009               	tblrd		*+	;fetch initializer
   121   00091E  CFF5 F017          	movff	tablat,__pdataCOMRAM
   122   000922  0009               	tblrd		*+	;fetch initializer
   123   000924  CFF5 F018          	movff	tablat,__pdataCOMRAM+1
   124   000928                     end_of_initialization:
   125                           	callstack 0
   126   000928                     __end_of__initialization:
   127                           	callstack 0
   128   000928  0E00               	movlw	low (__Lsmallconst shr (0+16))
   129   00092A  6EF8               	movwf	tblptru,c
   130   00092C  0E08               	movlw	high __Lsmallconst
   131   00092E  6EF7               	movwf	tblptrh,c
   132   000930  0100               	movlb	0
   133   000932  EF09  F004         	goto	_main	;jump to C main() function
   134                           
   135                           	psect	dataCOMRAM
   136   000017                     __pdataCOMRAM:
   137                           	callstack 0
   138   000017                     _acumulador:
   139                           	callstack 0
   140   000017                     	ds	2
   141                           
   142                           	psect	cstackCOMRAM
   143   000001                     __pcstackCOMRAM:
   144                           	callstack 0
   145   000001                     Send_Byte_Data@b_m1:
   146                           	callstack 0
   147                           
   148                           ; 1 bytes @ 0x0
   149   000001                     	ds	1
   150   000002                     Send_Byte_Data@i:
   151                           	callstack 0
   152                           
   153                           ; 1 bytes @ 0x1
   154   000002                     	ds	1
   155   000003                     ??_main:
   156                           
   157                           ; 1 bytes @ 0x2
   158   000003                     	ds	1
   159   000004                     main@peaton_stop:
   160                           	callstack 0
   161                           
   162                           ; 8 bytes @ 0x3
   163   000004                     	ds	8
   164   00000C                     main@bicubic:
   165                           	callstack 0
   166                           
   167                           ; 8 bytes @ 0xB
   168   00000C                     	ds	8
   169   000014                     main@CONTADOR:
   170                           	callstack 0
   171                           
   172                           ; 2 bytes @ 0x13
   173   000014                     	ds	2
   174   000016                     main@contador_binario:
   175                           	callstack 0
   176                           
   177                           ; 1 bytes @ 0x15
   178   000016                     	ds	1
   179                           
   180 ;;
   181 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   182 ;;
   183 ;; *************** function _main *****************
   184 ;; Defined at:
   185 ;;		line 137 in file "pruebilla.c"
   186 ;; Parameters:    Size  Location     Type
   187 ;;		None
   188 ;; Auto vars:     Size  Location     Type
   189 ;;  bicubic         8   11[COMRAM] const unsigned char [8]
   190 ;;  peaton_stop     8    3[COMRAM] const unsigned char [8]
   191 ;;  CONTADOR        2   19[COMRAM] int 
   192 ;;  contador_bin    1   21[COMRAM] unsigned char 
   193 ;; Return value:  Size  Location     Type
   194 ;;                  1    wreg      void 
   195 ;; Registers used:
   196 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   197 ;; Tracked objects:
   198 ;;		On entry : 0/0
   199 ;;		On exit  : 0/0
   200 ;;		Unchanged: 0/0
   201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   202 ;;      Params:         0       0       0       0       0       0       0       0       0
   203 ;;      Locals:        19       0       0       0       0       0       0       0       0
   204 ;;      Temps:          1       0       0       0       0       0       0       0       0
   205 ;;      Totals:        20       0       0       0       0       0       0       0       0
   206 ;;Total ram usage:       20 bytes
   207 ;; Hardware stack levels required when called: 1
   208 ;; This function calls:
   209 ;;		_Send_Byte_Data
   210 ;;		_inicializarSensor
   211 ;; This function is called by:
   212 ;;		Startup code after reset
   213 ;; This function uses a non-reentrant model
   214 ;;
   215                           
   216                           	psect	text0
   217   000812                     __ptext0:
   218                           	callstack 0
   219   000812                     _main:
   220                           	callstack 30
   221   000812                     
   222                           ;pruebilla.c: 139:     const uint8_t bicubic[8]={0x10,0x18,0x1c,0xfe,0xfe,0x1c,0x18,0x10
      +                          };
   223   000812  0E09               	movlw	low main@F3228
   224   000814  6EF6               	movwf	tblptrl,c
   225   000816                     	if	0	;There is only one active tblptr byte
   226   000816                     	endif
   227   000816                     	if	0	;There are less than 3 active tblptr bytes
   228   000816                     	endif
   229   000816  EE20  F00C         	lfsr	2,main@bicubic
   230   00081A  0E07               	movlw	7
   231   00081C                     u80:
   232   00081C  0009               	tblrd		*+
   233   00081E  CFF5 FFDE          	movff	tablat,postinc2
   234   000822  06E8               	decf	wreg,f,c
   235   000824  E2FB               	bc	u80
   236                           
   237                           ;pruebilla.c: 141:     const uint8_t peaton_stop[8] = {0x01, 0xe3, 0xf7, 0xe3, 0xd5, 0xf
      +                          7, 0xeb, 0xeb};
   238   000826  0E01               	movlw	low main@F3230
   239   000828  6EF6               	movwf	tblptrl,c
   240   00082A                     	if	0	;There is only one active tblptr byte
   241   00082A                     	endif
   242   00082A                     	if	0	;There are less than 3 active tblptr bytes
   243   00082A                     	endif
   244   00082A  EE20  F004         	lfsr	2,main@peaton_stop
   245   00082E  0E07               	movlw	7
   246   000830                     u90:
   247   000830  0009               	tblrd		*+
   248   000832  CFF5 FFDE          	movff	tablat,postinc2
   249   000836  06E8               	decf	wreg,f,c
   250   000838  E2FB               	bc	u90
   251   00083A                     
   252                           ;pruebilla.c: 142:     uint8_t contador_binario=0x80;
   253   00083A  0E80               	movlw	128
   254   00083C  6E16               	movwf	main@contador_binario^0,c
   255   00083E                     
   256                           ;pruebilla.c: 143:     int CONTADOR =0;
   257   00083E  0E00               	movlw	0
   258   000840  6E15               	movwf	(main@CONTADOR+1)^0,c
   259   000842  0E00               	movlw	0
   260   000844  6E14               	movwf	main@CONTADOR^0,c
   261   000846                     
   262                           ;pruebilla.c: 144:     ADCON1bits.PCFG=0x0f;
   263   000846  0E0F               	movlw	15
   264   000848  12C1               	iorwf	193,f,c	;volatile
   265   00084A                     
   266                           ;pruebilla.c: 145:     TRISD = 0x00;
   267   00084A  0E00               	movlw	0
   268   00084C  6E95               	movwf	149,c	;volatile
   269   00084E                     
   270                           ;pruebilla.c: 146:     TRISC = 0x00;
   271   00084E  0E00               	movlw	0
   272   000850  6E94               	movwf	148,c	;volatile
   273   000852                     
   274                           ;pruebilla.c: 147:     LATD = 0x00;
   275   000852  0E00               	movlw	0
   276   000854  6E8C               	movwf	140,c	;volatile
   277   000856                     
   278                           ;pruebilla.c: 148:     LATC = 0x00;
   279   000856  0E00               	movlw	0
   280   000858  6E8B               	movwf	139,c	;volatile
   281   00085A                     
   282                           ;pruebilla.c: 149:     LATCbits.LC6=1;
   283   00085A  8C8B               	bsf	139,6,c	;volatile
   284   00085C                     
   285                           ;pruebilla.c: 150:     inicializarSensor();
   286   00085C  EC9B  F004         	call	_inicializarSensor	;wreg free
   287   000860                     l833:
   288                           
   289                           ;pruebilla.c: 152:     {;pruebilla.c: 153:         _delay((unsigned long)((1)*(48000000/
      +                          4000.0)));
   290   000860  0E10               	movlw	16
   291   000862  6E03               	movwf	??_main^0,c
   292   000864  0E94               	movlw	148
   293   000866                     u127:
   294   000866  2EE8               	decfsz	wreg,f,c
   295   000868  D7FE               	bra	u127
   296   00086A  2E03               	decfsz	??_main^0,f,c
   297   00086C  D7FC               	bra	u127
   298   00086E  D000               	nop2	
   299   000870                     
   300                           ;pruebilla.c: 157:         Send_Byte_Data(~contador_binario);
   301   000870  5016               	movf	main@contador_binario^0,w,c
   302   000872  0AFF               	xorlw	255
   303   000874  EC67  F004         	call	_Send_Byte_Data
   304   000878                     
   305                           ;pruebilla.c: 158:         contador_binario=contador_binario>>1;
   306   000878  90D8               	bcf	status,0,c
   307   00087A  3016               	rrcf	main@contador_binario^0,w,c
   308   00087C  6E16               	movwf	main@contador_binario^0,c
   309   00087E                     
   310                           ;pruebilla.c: 159:         if(contador_binario==0x00){
   311   00087E  5016               	movf	main@contador_binario^0,w,c
   312   000880  A4D8               	btfss	status,2,c
   313   000882  EF45  F004         	goto	u101
   314   000886  EF47  F004         	goto	u100
   315   00088A                     u101:
   316   00088A  EF49  F004         	goto	l843
   317   00088E                     u100:
   318   00088E                     
   319                           ;pruebilla.c: 160:             contador_binario=0x80;
   320   00088E  0E80               	movlw	128
   321   000890  6E16               	movwf	main@contador_binario^0,c
   322   000892                     l843:
   323                           
   324                           ;pruebilla.c: 162:         LATD=bicubic[CONTADOR];
   325   000892  5014               	movf	main@CONTADOR^0,w,c
   326   000894  0F0C               	addlw	low main@bicubic
   327   000896  6ED9               	movwf	fsr2l,c
   328   000898  6ADA               	clrf	fsr2h,c
   329   00089A  50DF               	movf	indf2,w,c
   330   00089C  6E8C               	movwf	140,c	;volatile
   331   00089E                     
   332                           ;pruebilla.c: 164:         CONTADOR++;
   333   00089E  4A14               	infsnz	main@CONTADOR^0,f,c
   334   0008A0  2A15               	incf	(main@CONTADOR+1)^0,f,c
   335   0008A2                     
   336                           ;pruebilla.c: 165:         if(CONTADOR>7)
   337   0008A2  BE15               	btfsc	(main@CONTADOR+1)^0,7,c
   338   0008A4  EF5D  F004         	goto	u111
   339   0008A8  5015               	movf	(main@CONTADOR+1)^0,w,c
   340   0008AA  E109               	bnz	u110
   341   0008AC  0E08               	movlw	8
   342   0008AE  5C14               	subwf	main@CONTADOR^0,w,c
   343   0008B0  A0D8               	btfss	status,0,c
   344   0008B2  EF5D  F004         	goto	u111
   345   0008B6  EF5F  F004         	goto	u110
   346   0008BA                     u111:
   347   0008BA  EF30  F004         	goto	l833
   348   0008BE                     u110:
   349   0008BE                     
   350                           ;pruebilla.c: 166:         {;pruebilla.c: 167:             CONTADOR=0;
   351   0008BE  0E00               	movlw	0
   352   0008C0  6E15               	movwf	(main@CONTADOR+1)^0,c
   353   0008C2  0E00               	movlw	0
   354   0008C4  6E14               	movwf	main@CONTADOR^0,c
   355   0008C6  EF30  F004         	goto	l833
   356   0008CA  EF00  F000         	goto	start
   357   0008CE                     __end_of_main:
   358                           	callstack 0
   359                           
   360 ;; *************** function _inicializarSensor *****************
   361 ;; Defined at:
   362 ;;		line 59 in file "pruebilla.c"
   363 ;; Parameters:    Size  Location     Type
   364 ;;		None
   365 ;; Auto vars:     Size  Location     Type
   366 ;;		None
   367 ;; Return value:  Size  Location     Type
   368 ;;                  1    wreg      void 
   369 ;; Registers used:
   370 ;;		wreg, status,2
   371 ;; Tracked objects:
   372 ;;		On entry : 0/0
   373 ;;		On exit  : 0/0
   374 ;;		Unchanged: 0/0
   375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   376 ;;      Params:         0       0       0       0       0       0       0       0       0
   377 ;;      Locals:         0       0       0       0       0       0       0       0       0
   378 ;;      Temps:          0       0       0       0       0       0       0       0       0
   379 ;;      Totals:         0       0       0       0       0       0       0       0       0
   380 ;;Total ram usage:        0 bytes
   381 ;; Hardware stack levels used: 1
   382 ;; This function calls:
   383 ;;		Nothing
   384 ;; This function is called by:
   385 ;;		_main
   386 ;; This function uses a non-reentrant model
   387 ;;
   388                           
   389                           	psect	text1
   390   000936                     __ptext1:
   391                           	callstack 0
   392   000936                     _inicializarSensor:
   393                           	callstack 30
   394   000936                     
   395                           ;pruebilla.c: 60:     TRISBbits.RB2 = 0;
   396   000936  9493               	bcf	147,2,c	;volatile
   397                           
   398                           ;pruebilla.c: 61:     TRISBbits.RB3 = 0;
   399   000938  9693               	bcf	147,3,c	;volatile
   400   00093A                     
   401                           ;pruebilla.c: 62:     T1CON = 0xf8;
   402   00093A  0EF8               	movlw	248
   403   00093C  6ECD               	movwf	205,c	;volatile
   404   00093E                     
   405                           ;pruebilla.c: 63:     T1CONbits.TMR1ON = 1;
   406   00093E  80CD               	bsf	205,0,c	;volatile
   407   000940  0012               	return		;funcret
   408   000942                     __end_of_inicializarSensor:
   409                           	callstack 0
   410                           
   411 ;; *************** function _Send_Byte_Data *****************
   412 ;; Defined at:
   413 ;;		line 125 in file "pruebilla.c"
   414 ;; Parameters:    Size  Location     Type
   415 ;;  b_m1            1    wreg     unsigned char 
   416 ;; Auto vars:     Size  Location     Type
   417 ;;  b_m1            1    0[COMRAM] unsigned char 
   418 ;;  i               1    1[COMRAM] unsigned char 
   419 ;; Return value:  Size  Location     Type
   420 ;;                  1    wreg      void 
   421 ;; Registers used:
   422 ;;		wreg, status,2, status,0
   423 ;; Tracked objects:
   424 ;;		On entry : 0/0
   425 ;;		On exit  : 0/0
   426 ;;		Unchanged: 0/0
   427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   428 ;;      Params:         0       0       0       0       0       0       0       0       0
   429 ;;      Locals:         2       0       0       0       0       0       0       0       0
   430 ;;      Temps:          0       0       0       0       0       0       0       0       0
   431 ;;      Totals:         2       0       0       0       0       0       0       0       0
   432 ;;Total ram usage:        2 bytes
   433 ;; Hardware stack levels used: 1
   434 ;; This function calls:
   435 ;;		Nothing
   436 ;; This function is called by:
   437 ;;		_main
   438 ;; This function uses a non-reentrant model
   439 ;;
   440                           
   441                           	psect	text2
   442   0008CE                     __ptext2:
   443                           	callstack 0
   444   0008CE                     _Send_Byte_Data:
   445                           	callstack 30
   446                           
   447                           ;incstack = 0
   448                           ;Send_Byte_Data@b_m1 stored from wreg
   449   0008CE  6E01               	movwf	Send_Byte_Data@b_m1^0,c
   450   0008D0                     
   451                           ;pruebilla.c: 125: void Send_Byte_Data(uint8_t b_m1);pruebilla.c: 126: {;pruebilla.c: 12
      +                          7:     for(uint8_t i=0x80; i>0; i=i>>1)
   452   0008D0  0E80               	movlw	128
   453   0008D2  6E02               	movwf	Send_Byte_Data@i^0,c
   454   0008D4                     l771:
   455                           
   456                           ;pruebilla.c: 128:     {;pruebilla.c: 129:         (b_m1 & i) ? (LATCbits.LC2 = 1) : (LA
      +                          TCbits.LC2 = 0);
   457   0008D4  5001               	movf	Send_Byte_Data@b_m1^0,w,c
   458   0008D6  1402               	andwf	Send_Byte_Data@i^0,w,c
   459   0008D8  0900               	iorlw	0
   460   0008DA  B4D8               	btfsc	status,2,c
   461   0008DC  EF72  F004         	goto	u11
   462   0008E0  EF74  F004         	goto	u10
   463   0008E4                     u11:
   464   0008E4  EF77  F004         	goto	l62
   465   0008E8                     u10:
   466   0008E8  848B               	bsf	139,2,c	;volatile
   467   0008EA  EF78  F004         	goto	l64
   468   0008EE                     l62:
   469   0008EE  948B               	bcf	139,2,c	;volatile
   470   0008F0                     l64:
   471                           
   472                           ;pruebilla.c: 130:         LATCbits.LC0 = 1;
   473   0008F0  808B               	bsf	139,0,c	;volatile
   474                           
   475                           ;pruebilla.c: 131:         LATCbits.LC0 = 0;
   476   0008F2  908B               	bcf	139,0,c	;volatile
   477   0008F4                     
   478                           ;pruebilla.c: 132:     }
   479   0008F4  90D8               	bcf	status,0,c
   480   0008F6  3002               	rrcf	Send_Byte_Data@i^0,w,c
   481   0008F8  6E02               	movwf	Send_Byte_Data@i^0,c
   482   0008FA  5002               	movf	Send_Byte_Data@i^0,w,c
   483   0008FC  A4D8               	btfss	status,2,c
   484   0008FE  EF83  F004         	goto	u21
   485   000902  EF85  F004         	goto	u20
   486   000906                     u21:
   487   000906  EF6A  F004         	goto	l771
   488   00090A                     u20:
   489   00090A                     
   490                           ;pruebilla.c: 133:     LATCbits.LC1 = 1;
   491   00090A  828B               	bsf	139,1,c	;volatile
   492                           
   493                           ;pruebilla.c: 134:     LATCbits.LC1 = 0;
   494   00090C  928B               	bcf	139,1,c	;volatile
   495   00090E  0012               	return		;funcret
   496   000910                     __end_of_Send_Byte_Data:
   497                           	callstack 0
   498                           
   499                           	psect	rparam
   500   000000                     
   501                           	psect	config
   502                           
   503                           ;Config register CONFIG1L @ 0x300000
   504                           ;	PLL Prescaler Selection bits
   505                           ;	PLLDIV = 2, Divide by 2 (8 MHz oscillator input)
   506                           ;	System Clock Postscaler Selection bits
   507                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
   508                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
   509                           ;	USBDIV = 2, USB clock source comes from the 96 MHz PLL divided by 2
   510   300000                     	org	3145728
   511   300000  21                 	db	33
   512                           
   513                           ;Config register CONFIG1H @ 0x300001
   514                           ;	Oscillator Selection bits
   515                           ;	FOSC = HSPLL_HS, HS oscillator, PLL enabled (HSPLL)
   516                           ;	Fail-Safe Clock Monitor Enable bit
   517                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   518                           ;	Internal/External Oscillator Switchover bit
   519                           ;	IESO = OFF, Oscillator Switchover mode disabled
   520   300001                     	org	3145729
   521   300001  0E                 	db	14
   522                           
   523                           ;Config register CONFIG2L @ 0x300002
   524                           ;	Power-up Timer Enable bit
   525                           ;	PWRT = OFF, PWRT disabled
   526                           ;	Brown-out Reset Enable bits
   527                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
   528                           ;	Brown-out Reset Voltage bits
   529                           ;	BORV = 3, Minimum setting 2.05V
   530                           ;	USB Voltage Regulator Enable bit
   531                           ;	VREGEN = OFF, USB voltage regulator disabled
   532   300002                     	org	3145730
   533   300002  19                 	db	25
   534                           
   535                           ;Config register CONFIG2H @ 0x300003
   536                           ;	Watchdog Timer Enable bit
   537                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   538                           ;	Watchdog Timer Postscale Select bits
   539                           ;	WDTPS = 32768, 1:32768
   540   300003                     	org	3145731
   541   300003  1E                 	db	30
   542                           
   543                           ; Padding undefined space
   544   300004                     	org	3145732
   545   300004  FF                 	db	255
   546                           
   547                           ;Config register CONFIG3H @ 0x300005
   548                           ;	CCP2 MUX bit
   549                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
   550                           ;	PORTB A/D Enable bit
   551                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
   552                           ;	Low-Power Timer 1 Oscillator Enable bit
   553                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   554                           ;	MCLR Pin Enable bit
   555                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   556   300005                     	org	3145733
   557   300005  81                 	db	129
   558                           
   559                           ;Config register CONFIG4L @ 0x300006
   560                           ;	Stack Full/Underflow Reset Enable bit
   561                           ;	STVREN = ON, Stack full/underflow will cause Reset
   562                           ;	Single-Supply ICSP Enable bit
   563                           ;	LVP = OFF, Single-Supply ICSP disabled
   564                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
   565                           ;	ICPRT = OFF, ICPORT disabled
   566                           ;	Extended Instruction Set Enable bit
   567                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   568                           ;	Background Debugger Enable bit
   569                           ;	DEBUG = 0x1, unprogrammed default
   570   300006                     	org	3145734
   571   300006  81                 	db	129
   572                           
   573                           ; Padding undefined space
   574   300007                     	org	3145735
   575   300007  FF                 	db	255
   576                           
   577                           ;Config register CONFIG5L @ 0x300008
   578                           ;	Code Protection bit
   579                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
   580                           ;	Code Protection bit
   581                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
   582                           ;	Code Protection bit
   583                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
   584                           ;	Code Protection bit
   585                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
   586   300008                     	org	3145736
   587   300008  0F                 	db	15
   588                           
   589                           ;Config register CONFIG5H @ 0x300009
   590                           ;	Boot Block Code Protection bit
   591                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
   592                           ;	Data EEPROM Code Protection bit
   593                           ;	CPD = OFF, Data EEPROM is not code-protected
   594   300009                     	org	3145737
   595   300009  C0                 	db	192
   596                           
   597                           ;Config register CONFIG6L @ 0x30000A
   598                           ;	Write Protection bit
   599                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
   600                           ;	Write Protection bit
   601                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
   602                           ;	Write Protection bit
   603                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
   604                           ;	Write Protection bit
   605                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
   606   30000A                     	org	3145738
   607   30000A  0F                 	db	15
   608                           
   609                           ;Config register CONFIG6H @ 0x30000B
   610                           ;	Configuration Register Write Protection bit
   611                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
   612                           ;	Boot Block Write Protection bit
   613                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
   614                           ;	Data EEPROM Write Protection bit
   615                           ;	WRTD = OFF, Data EEPROM is not write-protected
   616   30000B                     	org	3145739
   617   30000B  E0                 	db	224
   618                           
   619                           ;Config register CONFIG7L @ 0x30000C
   620                           ;	Table Read Protection bit
   621                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
   622                           ;	Table Read Protection bit
   623                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
   624                           ;	Table Read Protection bit
   625                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
   626                           ;	Table Read Protection bit
   627                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
   628   30000C                     	org	3145740
   629   30000C  0F                 	db	15
   630                           
   631                           ;Config register CONFIG7H @ 0x30000D
   632                           ;	Boot Block Table Read Protection bit
   633                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
   634   30000D                     	org	3145741
   635   30000D  40                 	db	64
   636                           tosu	equ	0xFFF
   637                           tosh	equ	0xFFE
   638                           tosl	equ	0xFFD
   639                           stkptr	equ	0xFFC
   640                           pclatu	equ	0xFFB
   641                           pclath	equ	0xFFA
   642                           pcl	equ	0xFF9
   643                           tblptru	equ	0xFF8
   644                           tblptrh	equ	0xFF7
   645                           tblptrl	equ	0xFF6
   646                           tablat	equ	0xFF5
   647                           prodh	equ	0xFF4
   648                           prodl	equ	0xFF3
   649                           indf0	equ	0xFEF
   650                           postinc0	equ	0xFEE
   651                           postdec0	equ	0xFED
   652                           preinc0	equ	0xFEC
   653                           plusw0	equ	0xFEB
   654                           fsr0h	equ	0xFEA
   655                           fsr0l	equ	0xFE9
   656                           wreg	equ	0xFE8
   657                           indf1	equ	0xFE7
   658                           postinc1	equ	0xFE6
   659                           postdec1	equ	0xFE5
   660                           preinc1	equ	0xFE4
   661                           plusw1	equ	0xFE3
   662                           fsr1h	equ	0xFE2
   663                           fsr1l	equ	0xFE1
   664                           bsr	equ	0xFE0
   665                           indf2	equ	0xFDF
   666                           postinc2	equ	0xFDE
   667                           postdec2	equ	0xFDD
   668                           preinc2	equ	0xFDC
   669                           plusw2	equ	0xFDB
   670                           fsr2h	equ	0xFDA
   671                           fsr2l	equ	0xFD9
   672                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    16
    Data        2
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     22      24
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           239      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_Send_Byte_Data

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                20    20      0     165
                                              2 COMRAM    20    20      0
                     _Send_Byte_Data
                  _inicializarSensor
 ---------------------------------------------------------------------------------
 (1) _inicializarSensor                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Send_Byte_Data                                       2     2      0      75
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Send_Byte_Data
   _inicializarSensor

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM_1           400      0       0      31        0.0%
BIGRAM             3EE      0       0      32        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      17        0.0%
BANK7              100      0       0      18        0.0%
BITBANK6           100      0       0      15        0.0%
BANK6              100      0       0      16        0.0%
BITBANK5           100      0       0      13        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK3            EF      0       0       9        0.0%
BANK3               EF      0       0      10        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0       0       4        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     16      18       1       25.3%
BITBIGSFR_1ll       24      0       0      25        0.0%
BITBIGSFRlll        21      0       0      29        0.0%
BITBIGSFR_5          C      0       0      19        0.0%
BITBIGSFR_1lh        B      0       0      24        0.0%
BITBIGSFRllh         8      0       0      28        0.0%
BITBIGSFRhh          6      0       0      26        0.0%
BITBIGSFRlh          6      0       0      27        0.0%
BITBIGSFR_2          6      0       0      22        0.0%
BITBIGSFR_1hh        4      0       0      23        0.0%
BITBIGSFR_4          3      0       0      20        0.0%
BITBIGSFR_3          3      0       0      21        0.0%
BIGSFR_5             0      0       0     200        0.0%
BIGSFR_4             0      0       0     200        0.0%
BIGSFR_3             0      0       0     200        0.0%
BIGSFR_2             0      0       0     200        0.0%
BIGSFR_1             0      0       0     200        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      18      30        0.0%
DATA                 0      0      18      33        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Thu Mar 21 17:31:07 2024

                       l31 0940                         l60 090A                         l62 08EE  
                       l64 08F0                         l65 090E                         u10 08E8  
                       u11 08E4                         u20 090A                         u21 0906  
                       u80 081C                         u90 0830                        l821 084A  
                      l813 0812                        l831 085C                        l823 084E  
                      l815 083A                        l841 088E                        l833 0860  
                      l825 0852                        l817 083E                        l771 08D4  
                      l755 0936                        l843 0892                        l835 0870  
                      l827 0856                        l819 0846                        l773 08E8  
                      l765 08D0                        l757 093A                        l845 089E  
                      l837 0878                        l829 085A                        l775 08F4  
                      l759 093E                        l847 08A2                        l839 087E  
                      l777 08FA                        l849 08BE                        u100 088E  
                      u101 088A                        u110 08BE                        u111 08BA  
                      u127 0866       main@contador_binario 0016                        wreg 0FE8  
              main@bicubic 000C                       _LATC 0F8B                       _LATD 0F8C  
                     _main 0812                       fsr2h 0FDA                       indf2 0FDF  
                     fsr2l 0FD9                       start 0000               ___param_bank 0000  
        _inicializarSensor 0936         ?_inicializarSensor 0001                      ?_main 0001  
                    _T1CON 0FCD                      _TMR1H 0FCF                      _TMR1L 0FCE  
                    _TRISC 0F94                      _TRISD 0F95        ??_inicializarSensor 0001  
                    tablat 0FF5                      status 0FD8  __end_of_inicializarSensor 0942  
          __initialization 0910               __end_of_main 08CE                     ??_main 0003  
            __activetblptr 0001           ??_Send_Byte_Data 0001                     isa$std 0001  
             __pdataCOMRAM 0017               __mediumconst 0000                     tblptrh 0FF7  
                   tblptrl 0FF6                     tblptru 0FF8            Send_Byte_Data@i 0002  
               __accesstop 0060    __end_of__initialization 0928              ___rparam_used 0001  
           __pcstackCOMRAM 0001                 _acumulador 0017                    __Hparam 0000  
                  __Lparam 0000               __psmallconst 0800                    __pcinit 0910  
                  __ramtop 0800                    __ptext0 0812                    __ptext1 0936  
                  __ptext2 08CE                  _T1CONbits 0FCD       end_of_initialization 0928  
        __end_ofmain@F3230 0809          __end_ofmain@F3228 0811                    postinc2 0FDE  
                _PORTBbits 0F81                  _TRISBbits 0F93              __pidataCOMRAM 0942  
      start_initialization 0910                __smallconst 0800                   _LATBbits 0F8A  
                 _LATCbits 0F8B                  main@F3230 0801                  main@F3228 0809  
               _ADCON1bits 0FC1            main@peaton_stop 0004             _Send_Byte_Data 08CE  
                 __Hrparam 0000                   __Lrparam 0000               __Lsmallconst 0800  
   __end_of_Send_Byte_Data 0910         Send_Byte_Data@b_m1 0001                   isa$xinst 0000  
          ?_Send_Byte_Data 0001               main@CONTADOR 0014  
