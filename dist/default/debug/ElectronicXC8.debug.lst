

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Fri Mar 22 00:05:43 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    14                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    15                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    16   000000                     
    17                           ; Generated 17/10/2023 GMT
    18                           ; 
    19                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution. Publication is not required when
    33                           ;        this file is used in an embedded application.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC18F4550 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51   000000                     
    52                           	psect	idataCOMRAM
    53   00095C                     __pidataCOMRAM:
    54                           	callstack 0
    55                           
    56                           ;initializer for _acumulador
    57   00095C  0007               	dw	7
    58                           
    59                           	psect	smallconst
    60   000800                     __psmallconst:
    61                           	callstack 0
    62   000800  00                 	db	0
    63   000801                     main@F3226:
    64                           	callstack 0
    65   000801  01                 	db	1
    66   000802  E3                 	db	227
    67   000803  F7                 	db	247
    68   000804  E3                 	db	227
    69   000805  D5                 	db	213
    70   000806  F7                 	db	247
    71   000807  EB                 	db	235
    72   000808  EB                 	db	235
    73   000809                     __end_ofmain@F3226:
    74                           	callstack 0
    75   000809                     main@F3224:
    76                           	callstack 0
    77   000809  10                 	db	16
    78   00080A  18                 	db	24
    79   00080B  1C                 	db	28
    80   00080C  FE                 	db	254
    81   00080D  FE                 	db	254
    82   00080E  1C                 	db	28
    83   00080F  18                 	db	24
    84   000810  10                 	db	16
    85   000811                     __end_ofmain@F3224:
    86                           	callstack 0
    87   000000                     _TMR0	set	4054
    88   000000                     _T0CONbits	set	4053
    89   000000                     _PORTAbits	set	3968
    90   000000                     _LATAbits	set	3977
    91   000000                     _TRISAbits	set	3986
    92   000000                     _ADCON1bits	set	4033
    93   000000                     _TRISC	set	3988
    94   000000                     _TRISD	set	3989
    95   000000                     _LATCbits	set	3979
    96   000000                     _LATD	set	3980
    97   000811  00                 	db	0	; dummy byte at the end
    98   000000                     
    99                           ; #config settings
   100                           
   101                           	psect	cinit
   102   00092A                     __pcinit:
   103                           	callstack 0
   104   00092A                     start_initialization:
   105                           	callstack 0
   106   00092A                     __initialization:
   107                           	callstack 0
   108                           
   109                           ; Initialize objects allocated to COMRAM (2 bytes)
   110                           ; load TBLPTR registers with __pidataCOMRAM
   111   00092A  0E5C               	movlw	low __pidataCOMRAM
   112   00092C  6EF6               	movwf	tblptrl,c
   113   00092E  0E09               	movlw	high __pidataCOMRAM
   114   000930  6EF7               	movwf	tblptrh,c
   115   000932  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   116   000934  6EF8               	movwf	tblptru,c
   117   000936  0009               	tblrd		*+	;fetch initializer
   118   000938  CFF5 F018          	movff	tablat,__pdataCOMRAM
   119   00093C  0009               	tblrd		*+	;fetch initializer
   120   00093E  CFF5 F019          	movff	tablat,__pdataCOMRAM+1
   121   000942                     end_of_initialization:
   122                           	callstack 0
   123   000942                     __end_of__initialization:
   124                           	callstack 0
   125   000942  0E00               	movlw	low (__Lsmallconst shr (0+16))
   126   000944  6EF8               	movwf	tblptru,c
   127   000946  0E08               	movlw	high __Lsmallconst
   128   000948  6EF7               	movwf	tblptrh,c
   129   00094A  0100               	movlb	0
   130   00094C  EF09  F004         	goto	_main	;jump to C main() function
   131                           
   132                           	psect	dataCOMRAM
   133   000018                     __pdataCOMRAM:
   134                           	callstack 0
   135   000018                     _acumulador:
   136                           	callstack 0
   137   000018                     	ds	2
   138                           
   139                           	psect	cstackCOMRAM
   140   000001                     __pcstackCOMRAM:
   141                           	callstack 0
   142   000001                     Send_Byte_Data@b_m1:
   143                           	callstack 0
   144                           
   145                           ; 1 bytes @ 0x0
   146   000001                     	ds	1
   147   000002                     Send_Byte_Data@i:
   148                           	callstack 0
   149                           
   150                           ; 1 bytes @ 0x1
   151   000002                     	ds	1
   152   000003                     ??_main:
   153                           
   154                           ; 1 bytes @ 0x2
   155   000003                     	ds	2
   156   000005                     main@peaton_stop:
   157                           	callstack 0
   158                           
   159                           ; 8 bytes @ 0x4
   160   000005                     	ds	8
   161   00000D                     main@bicubic:
   162                           	callstack 0
   163                           
   164                           ; 8 bytes @ 0xC
   165   00000D                     	ds	8
   166   000015                     main@CONTADOR:
   167                           	callstack 0
   168                           
   169                           ; 2 bytes @ 0x14
   170   000015                     	ds	2
   171   000017                     main@contador_binario:
   172                           	callstack 0
   173                           
   174                           ; 1 bytes @ 0x16
   175   000017                     	ds	1
   176                           
   177 ;;
   178 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   179 ;;
   180 ;; *************** function _main *****************
   181 ;; Defined at:
   182 ;;		line 81 in file "pruebilla.c"
   183 ;; Parameters:    Size  Location     Type
   184 ;;		None
   185 ;; Auto vars:     Size  Location     Type
   186 ;;  bicubic         8   12[COMRAM] const unsigned char [8]
   187 ;;  peaton_stop     8    4[COMRAM] const unsigned char [8]
   188 ;;  CONTADOR        2   20[COMRAM] int 
   189 ;;  contador_bin    1   22[COMRAM] unsigned char 
   190 ;; Return value:  Size  Location     Type
   191 ;;                  1    wreg      void 
   192 ;; Registers used:
   193 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   194 ;; Tracked objects:
   195 ;;		On entry : 0/0
   196 ;;		On exit  : 0/0
   197 ;;		Unchanged: 0/0
   198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   199 ;;      Params:         0       0       0       0       0       0       0       0       0
   200 ;;      Locals:        19       0       0       0       0       0       0       0       0
   201 ;;      Temps:          2       0       0       0       0       0       0       0       0
   202 ;;      Totals:        21       0       0       0       0       0       0       0       0
   203 ;;Total ram usage:       21 bytes
   204 ;; Hardware stack levels required when called: 1
   205 ;; This function calls:
   206 ;;		_Send_Byte_Data
   207 ;;		_inicializarSensor
   208 ;; This function is called by:
   209 ;;		Startup code after reset
   210 ;; This function uses a non-reentrant model
   211 ;;
   212                           
   213                           	psect	text0
   214   000812                     __ptext0:
   215                           	callstack 0
   216   000812                     _main:
   217                           	callstack 30
   218   000812                     
   219                           ;pruebilla.c: 84:     const uint8_t bicubic[8]={0x10,0x18,0x1c,0xfe,0xfe,0x1c,0x18,0x10}
      +                          ;
   220   000812  0E09               	movlw	low main@F3224
   221   000814  6EF6               	movwf	tblptrl,c
   222   000816                     	if	0	;There is only one active tblptr byte
   223   000816                     	endif
   224   000816                     	if	0	;There are less than 3 active tblptr bytes
   225   000816                     	endif
   226   000816  EE20  F00D         	lfsr	2,main@bicubic
   227   00081A  0E07               	movlw	7
   228   00081C                     u50:
   229   00081C  0009               	tblrd		*+
   230   00081E  CFF5 FFDE          	movff	tablat,postinc2
   231   000822  06E8               	decf	wreg,f,c
   232   000824  E2FB               	bc	u50
   233                           
   234                           ;pruebilla.c: 86:     const uint8_t peaton_stop[8] = {0x01, 0xe3, 0xf7, 0xe3, 0xd5, 0xf7
      +                          , 0xeb, 0xeb};
   235   000826  0E01               	movlw	low main@F3226
   236   000828  6EF6               	movwf	tblptrl,c
   237   00082A                     	if	0	;There is only one active tblptr byte
   238   00082A                     	endif
   239   00082A                     	if	0	;There are less than 3 active tblptr bytes
   240   00082A                     	endif
   241   00082A  EE20  F005         	lfsr	2,main@peaton_stop
   242   00082E  0E07               	movlw	7
   243   000830                     u60:
   244   000830  0009               	tblrd		*+
   245   000832  CFF5 FFDE          	movff	tablat,postinc2
   246   000836  06E8               	decf	wreg,f,c
   247   000838  E2FB               	bc	u60
   248   00083A                     
   249                           ;pruebilla.c: 87:     uint8_t contador_binario=0x80;
   250   00083A  0E80               	movlw	128
   251   00083C  6E17               	movwf	main@contador_binario^0,c
   252   00083E                     
   253                           ;pruebilla.c: 88:     int CONTADOR =0;
   254   00083E  0E00               	movlw	0
   255   000840  6E16               	movwf	(main@CONTADOR+1)^0,c
   256   000842  0E00               	movlw	0
   257   000844  6E15               	movwf	main@CONTADOR^0,c
   258   000846                     
   259                           ;pruebilla.c: 97:     inicializarSensor();
   260   000846  ECA8  F004         	call	_inicializarSensor	;wreg free
   261   00084A                     
   262                           ;pruebilla.c: 104:     TRISD = 0x00;
   263   00084A  0E00               	movlw	0
   264   00084C  6E95               	movwf	149,c	;volatile
   265   00084E                     
   266                           ;pruebilla.c: 105:     TRISC = 0x00;
   267   00084E  0E00               	movlw	0
   268   000850  6E94               	movwf	148,c	;volatile
   269   000852                     
   270                           ;pruebilla.c: 106:     LATD = 0x00;
   271   000852  0E00               	movlw	0
   272   000854  6E8C               	movwf	140,c	;volatile
   273   000856                     
   274                           ;pruebilla.c: 107:     LATCbits.LC6=1;
   275   000856  8C8B               	bsf	139,6,c	;volatile
   276   000858                     
   277                           ;pruebilla.c: 108:     LATAbits.LA0 =0;
   278   000858  9089               	bcf	137,0,c	;volatile
   279   00085A                     
   280                           ;pruebilla.c: 109:     LATAbits.LA2=1;
   281   00085A  8489               	bsf	137,2,c	;volatile
   282   00085C                     l794:
   283                           
   284                           ;pruebilla.c: 111:     {;pruebilla.c: 112:         if(PORTAbits.RA1==1)
   285   00085C  A280               	btfss	128,1,c	;volatile
   286   00085E  EF33  F004         	goto	u71
   287   000862  EF35  F004         	goto	u70
   288   000866                     u71:
   289   000866  EF38  F004         	goto	l58
   290   00086A                     u70:
   291   00086A                     
   292                           ;pruebilla.c: 113:             LATAbits.LA0 =1;
   293   00086A  8089               	bsf	137,0,c	;volatile
   294   00086C  EF39  F004         	goto	l798
   295   000870                     l58:
   296                           
   297                           ;pruebilla.c: 115:             LATAbits.LA0 =0;
   298   000870  9089               	bcf	137,0,c	;volatile
   299   000872                     l798:
   300                           
   301                           ;pruebilla.c: 119:         _delay((unsigned long)((100)*(48000000/4000.0)));
   302   000872  0E07               	movlw	7
   303   000874  6E04               	movwf	(??_main+1)^0,c
   304   000876  0E17               	movlw	23
   305   000878  6E03               	movwf	??_main^0,c
   306   00087A  0E6A               	movlw	106
   307   00087C                     u107:
   308   00087C  2EE8               	decfsz	wreg,f,c
   309   00087E  D7FE               	bra	u107
   310   000880  2E03               	decfsz	??_main^0,f,c
   311   000882  D7FC               	bra	u107
   312   000884  2E04               	decfsz	(??_main+1)^0,f,c
   313   000886  D7FA               	bra	u107
   314   000888  D000               	nop2	
   315   00088A                     
   316                           ;pruebilla.c: 121:         Send_Byte_Data(~contador_binario);
   317   00088A  5017               	movf	main@contador_binario^0,w,c
   318   00088C  0AFF               	xorlw	255
   319   00088E  EC74  F004         	call	_Send_Byte_Data
   320   000892                     
   321                           ;pruebilla.c: 122:         contador_binario=contador_binario>>1;
   322   000892  90D8               	bcf	status,0,c
   323   000894  3017               	rrcf	main@contador_binario^0,w,c
   324   000896  6E17               	movwf	main@contador_binario^0,c
   325   000898                     
   326                           ;pruebilla.c: 123:         if(contador_binario==0x00){
   327   000898  5017               	movf	main@contador_binario^0,w,c
   328   00089A  A4D8               	btfss	status,2,c
   329   00089C  EF52  F004         	goto	u81
   330   0008A0  EF54  F004         	goto	u80
   331   0008A4                     u81:
   332   0008A4  EF56  F004         	goto	l808
   333   0008A8                     u80:
   334   0008A8                     
   335                           ;pruebilla.c: 124:             contador_binario=0x80;
   336   0008A8  0E80               	movlw	128
   337   0008AA  6E17               	movwf	main@contador_binario^0,c
   338   0008AC                     l808:
   339                           
   340                           ;pruebilla.c: 126:         LATD=bicubic[CONTADOR];
   341   0008AC  5015               	movf	main@CONTADOR^0,w,c
   342   0008AE  0F0D               	addlw	low main@bicubic
   343   0008B0  6ED9               	movwf	fsr2l,c
   344   0008B2  6ADA               	clrf	fsr2h,c
   345   0008B4  50DF               	movf	indf2,w,c
   346   0008B6  6E8C               	movwf	140,c	;volatile
   347   0008B8                     
   348                           ;pruebilla.c: 128:         CONTADOR++;
   349   0008B8  4A15               	infsnz	main@CONTADOR^0,f,c
   350   0008BA  2A16               	incf	(main@CONTADOR+1)^0,f,c
   351   0008BC                     
   352                           ;pruebilla.c: 129:         if(CONTADOR>7)
   353   0008BC  BE16               	btfsc	(main@CONTADOR+1)^0,7,c
   354   0008BE  EF6A  F004         	goto	u91
   355   0008C2  5016               	movf	(main@CONTADOR+1)^0,w,c
   356   0008C4  E109               	bnz	u90
   357   0008C6  0E08               	movlw	8
   358   0008C8  5C15               	subwf	main@CONTADOR^0,w,c
   359   0008CA  A0D8               	btfss	status,0,c
   360   0008CC  EF6A  F004         	goto	u91
   361   0008D0  EF6C  F004         	goto	u90
   362   0008D4                     u91:
   363   0008D4  EF2E  F004         	goto	l794
   364   0008D8                     u90:
   365   0008D8                     
   366                           ;pruebilla.c: 130:         {;pruebilla.c: 131:             CONTADOR=0;
   367   0008D8  0E00               	movlw	0
   368   0008DA  6E16               	movwf	(main@CONTADOR+1)^0,c
   369   0008DC  0E00               	movlw	0
   370   0008DE  6E15               	movwf	main@CONTADOR^0,c
   371   0008E0  EF2E  F004         	goto	l794
   372   0008E4  EF00  F000         	goto	start
   373   0008E8                     __end_of_main:
   374                           	callstack 0
   375                           
   376 ;; *************** function _inicializarSensor *****************
   377 ;; Defined at:
   378 ;;		line 32 in file "pruebilla.c"
   379 ;; Parameters:    Size  Location     Type
   380 ;;		None
   381 ;; Auto vars:     Size  Location     Type
   382 ;;		None
   383 ;; Return value:  Size  Location     Type
   384 ;;                  1    wreg      void 
   385 ;; Registers used:
   386 ;;		wreg, status,2
   387 ;; Tracked objects:
   388 ;;		On entry : 0/0
   389 ;;		On exit  : 0/0
   390 ;;		Unchanged: 0/0
   391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   392 ;;      Params:         0       0       0       0       0       0       0       0       0
   393 ;;      Locals:         0       0       0       0       0       0       0       0       0
   394 ;;      Temps:          0       0       0       0       0       0       0       0       0
   395 ;;      Totals:         0       0       0       0       0       0       0       0       0
   396 ;;Total ram usage:        0 bytes
   397 ;; Hardware stack levels used: 1
   398 ;; This function calls:
   399 ;;		Nothing
   400 ;; This function is called by:
   401 ;;		_main
   402 ;; This function uses a non-reentrant model
   403 ;;
   404                           
   405                           	psect	text1
   406   000950                     __ptext1:
   407                           	callstack 0
   408   000950                     _inicializarSensor:
   409                           	callstack 30
   410   000950                     
   411                           ;pruebilla.c: 33:     ADCON1bits.PCFG=0x0f;
   412   000950  0E0F               	movlw	15
   413   000952  12C1               	iorwf	193,f,c	;volatile
   414   000954                     
   415                           ;pruebilla.c: 34:     TRISAbits.RA0 = 0;
   416   000954  9092               	bcf	146,0,c	;volatile
   417   000956                     
   418                           ;pruebilla.c: 35:     TRISAbits.RA1 = 1;
   419   000956  8292               	bsf	146,1,c	;volatile
   420   000958                     
   421                           ;pruebilla.c: 36:     TRISAbits.RA2=0;
   422   000958  9492               	bcf	146,2,c	;volatile
   423   00095A  0012               	return		;funcret
   424   00095C                     __end_of_inicializarSensor:
   425                           	callstack 0
   426                           
   427 ;; *************** function _Send_Byte_Data *****************
   428 ;; Defined at:
   429 ;;		line 69 in file "pruebilla.c"
   430 ;; Parameters:    Size  Location     Type
   431 ;;  b_m1            1    wreg     unsigned char 
   432 ;; Auto vars:     Size  Location     Type
   433 ;;  b_m1            1    0[COMRAM] unsigned char 
   434 ;;  i               1    1[COMRAM] unsigned char 
   435 ;; Return value:  Size  Location     Type
   436 ;;                  1    wreg      void 
   437 ;; Registers used:
   438 ;;		wreg, status,2, status,0
   439 ;; Tracked objects:
   440 ;;		On entry : 0/0
   441 ;;		On exit  : 0/0
   442 ;;		Unchanged: 0/0
   443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   444 ;;      Params:         0       0       0       0       0       0       0       0       0
   445 ;;      Locals:         2       0       0       0       0       0       0       0       0
   446 ;;      Temps:          0       0       0       0       0       0       0       0       0
   447 ;;      Totals:         2       0       0       0       0       0       0       0       0
   448 ;;Total ram usage:        2 bytes
   449 ;; Hardware stack levels used: 1
   450 ;; This function calls:
   451 ;;		Nothing
   452 ;; This function is called by:
   453 ;;		_main
   454 ;; This function uses a non-reentrant model
   455 ;;
   456                           
   457                           	psect	text2
   458   0008E8                     __ptext2:
   459                           	callstack 0
   460   0008E8                     _Send_Byte_Data:
   461                           	callstack 30
   462                           
   463                           ;incstack = 0
   464                           ;Send_Byte_Data@b_m1 stored from wreg
   465   0008E8  6E01               	movwf	Send_Byte_Data@b_m1^0,c
   466   0008EA                     
   467                           ;pruebilla.c: 69: void Send_Byte_Data(uint8_t b_m1);pruebilla.c: 70: {;pruebilla.c: 71: 
      +                              for(uint8_t i=0x80; i>0; i=i>>1)
   468   0008EA  0E80               	movlw	128
   469   0008EC  6E02               	movwf	Send_Byte_Data@i^0,c
   470   0008EE                     l754:
   471                           
   472                           ;pruebilla.c: 72:     {;pruebilla.c: 73:         (b_m1 & i) ? (LATCbits.LC2 = 1) : (LATC
      +                          bits.LC2 = 0);
   473   0008EE  5001               	movf	Send_Byte_Data@b_m1^0,w,c
   474   0008F0  1402               	andwf	Send_Byte_Data@i^0,w,c
   475   0008F2  0900               	iorlw	0
   476   0008F4  B4D8               	btfsc	status,2,c
   477   0008F6  EF7F  F004         	goto	u11
   478   0008FA  EF81  F004         	goto	u10
   479   0008FE                     u11:
   480   0008FE  EF84  F004         	goto	l45
   481   000902                     u10:
   482   000902  848B               	bsf	139,2,c	;volatile
   483   000904  EF85  F004         	goto	l47
   484   000908                     l45:
   485   000908  948B               	bcf	139,2,c	;volatile
   486   00090A                     l47:
   487                           
   488                           ;pruebilla.c: 74:         LATCbits.LC0 = 1;
   489   00090A  808B               	bsf	139,0,c	;volatile
   490                           
   491                           ;pruebilla.c: 75:         LATCbits.LC0 = 0;
   492   00090C  908B               	bcf	139,0,c	;volatile
   493   00090E                     
   494                           ;pruebilla.c: 76:     }
   495   00090E  90D8               	bcf	status,0,c
   496   000910  3002               	rrcf	Send_Byte_Data@i^0,w,c
   497   000912  6E02               	movwf	Send_Byte_Data@i^0,c
   498   000914  5002               	movf	Send_Byte_Data@i^0,w,c
   499   000916  A4D8               	btfss	status,2,c
   500   000918  EF90  F004         	goto	u21
   501   00091C  EF92  F004         	goto	u20
   502   000920                     u21:
   503   000920  EF77  F004         	goto	l754
   504   000924                     u20:
   505   000924                     
   506                           ;pruebilla.c: 77:     LATCbits.LC1 = 1;
   507   000924  828B               	bsf	139,1,c	;volatile
   508                           
   509                           ;pruebilla.c: 78:     LATCbits.LC1 = 0;
   510   000926  928B               	bcf	139,1,c	;volatile
   511   000928  0012               	return		;funcret
   512   00092A                     __end_of_Send_Byte_Data:
   513                           	callstack 0
   514                           
   515                           	psect	rparam
   516   000000                     
   517                           	psect	config
   518                           
   519                           ;Config register CONFIG1L @ 0x300000
   520                           ;	PLL Prescaler Selection bits
   521                           ;	PLLDIV = 2, Divide by 2 (8 MHz oscillator input)
   522                           ;	System Clock Postscaler Selection bits
   523                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
   524                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
   525                           ;	USBDIV = 2, USB clock source comes from the 96 MHz PLL divided by 2
   526   300000                     	org	3145728
   527   300000  21                 	db	33
   528                           
   529                           ;Config register CONFIG1H @ 0x300001
   530                           ;	Oscillator Selection bits
   531                           ;	FOSC = HSPLL_HS, HS oscillator, PLL enabled (HSPLL)
   532                           ;	Fail-Safe Clock Monitor Enable bit
   533                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   534                           ;	Internal/External Oscillator Switchover bit
   535                           ;	IESO = OFF, Oscillator Switchover mode disabled
   536   300001                     	org	3145729
   537   300001  0E                 	db	14
   538                           
   539                           ;Config register CONFIG2L @ 0x300002
   540                           ;	Power-up Timer Enable bit
   541                           ;	PWRT = OFF, PWRT disabled
   542                           ;	Brown-out Reset Enable bits
   543                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
   544                           ;	Brown-out Reset Voltage bits
   545                           ;	BORV = 3, Minimum setting 2.05V
   546                           ;	USB Voltage Regulator Enable bit
   547                           ;	VREGEN = OFF, USB voltage regulator disabled
   548   300002                     	org	3145730
   549   300002  19                 	db	25
   550                           
   551                           ;Config register CONFIG2H @ 0x300003
   552                           ;	Watchdog Timer Enable bit
   553                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   554                           ;	Watchdog Timer Postscale Select bits
   555                           ;	WDTPS = 32768, 1:32768
   556   300003                     	org	3145731
   557   300003  1E                 	db	30
   558                           
   559                           ; Padding undefined space
   560   300004                     	org	3145732
   561   300004  FF                 	db	255
   562                           
   563                           ;Config register CONFIG3H @ 0x300005
   564                           ;	CCP2 MUX bit
   565                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
   566                           ;	PORTB A/D Enable bit
   567                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
   568                           ;	Low-Power Timer 1 Oscillator Enable bit
   569                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   570                           ;	MCLR Pin Enable bit
   571                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   572   300005                     	org	3145733
   573   300005  81                 	db	129
   574                           
   575                           ;Config register CONFIG4L @ 0x300006
   576                           ;	Stack Full/Underflow Reset Enable bit
   577                           ;	STVREN = ON, Stack full/underflow will cause Reset
   578                           ;	Single-Supply ICSP Enable bit
   579                           ;	LVP = OFF, Single-Supply ICSP disabled
   580                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
   581                           ;	ICPRT = OFF, ICPORT disabled
   582                           ;	Extended Instruction Set Enable bit
   583                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   584                           ;	Background Debugger Enable bit
   585                           ;	DEBUG = 0x1, unprogrammed default
   586   300006                     	org	3145734
   587   300006  81                 	db	129
   588                           
   589                           ; Padding undefined space
   590   300007                     	org	3145735
   591   300007  FF                 	db	255
   592                           
   593                           ;Config register CONFIG5L @ 0x300008
   594                           ;	Code Protection bit
   595                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
   596                           ;	Code Protection bit
   597                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
   598                           ;	Code Protection bit
   599                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
   600                           ;	Code Protection bit
   601                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
   602   300008                     	org	3145736
   603   300008  0F                 	db	15
   604                           
   605                           ;Config register CONFIG5H @ 0x300009
   606                           ;	Boot Block Code Protection bit
   607                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
   608                           ;	Data EEPROM Code Protection bit
   609                           ;	CPD = OFF, Data EEPROM is not code-protected
   610   300009                     	org	3145737
   611   300009  C0                 	db	192
   612                           
   613                           ;Config register CONFIG6L @ 0x30000A
   614                           ;	Write Protection bit
   615                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
   616                           ;	Write Protection bit
   617                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
   618                           ;	Write Protection bit
   619                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
   620                           ;	Write Protection bit
   621                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
   622   30000A                     	org	3145738
   623   30000A  0F                 	db	15
   624                           
   625                           ;Config register CONFIG6H @ 0x30000B
   626                           ;	Configuration Register Write Protection bit
   627                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
   628                           ;	Boot Block Write Protection bit
   629                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
   630                           ;	Data EEPROM Write Protection bit
   631                           ;	WRTD = OFF, Data EEPROM is not write-protected
   632   30000B                     	org	3145739
   633   30000B  E0                 	db	224
   634                           
   635                           ;Config register CONFIG7L @ 0x30000C
   636                           ;	Table Read Protection bit
   637                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
   638                           ;	Table Read Protection bit
   639                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
   640                           ;	Table Read Protection bit
   641                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
   642                           ;	Table Read Protection bit
   643                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
   644   30000C                     	org	3145740
   645   30000C  0F                 	db	15
   646                           
   647                           ;Config register CONFIG7H @ 0x30000D
   648                           ;	Boot Block Table Read Protection bit
   649                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
   650   30000D                     	org	3145741
   651   30000D  40                 	db	64
   652                           tosu	equ	0xFFF
   653                           tosh	equ	0xFFE
   654                           tosl	equ	0xFFD
   655                           stkptr	equ	0xFFC
   656                           pclatu	equ	0xFFB
   657                           pclath	equ	0xFFA
   658                           pcl	equ	0xFF9
   659                           tblptru	equ	0xFF8
   660                           tblptrh	equ	0xFF7
   661                           tblptrl	equ	0xFF6
   662                           tablat	equ	0xFF5
   663                           prodh	equ	0xFF4
   664                           prodl	equ	0xFF3
   665                           indf0	equ	0xFEF
   666                           postinc0	equ	0xFEE
   667                           postdec0	equ	0xFED
   668                           preinc0	equ	0xFEC
   669                           plusw0	equ	0xFEB
   670                           fsr0h	equ	0xFEA
   671                           fsr0l	equ	0xFE9
   672                           wreg	equ	0xFE8
   673                           indf1	equ	0xFE7
   674                           postinc1	equ	0xFE6
   675                           postdec1	equ	0xFE5
   676                           preinc1	equ	0xFE4
   677                           plusw1	equ	0xFE3
   678                           fsr1h	equ	0xFE2
   679                           fsr1l	equ	0xFE1
   680                           bsr	equ	0xFE0
   681                           indf2	equ	0xFDF
   682                           postinc2	equ	0xFDE
   683                           postdec2	equ	0xFDD
   684                           preinc2	equ	0xFDC
   685                           plusw2	equ	0xFDB
   686                           fsr2h	equ	0xFDA
   687                           fsr2l	equ	0xFD9
   688                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    16
    Data        2
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     23      25
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           244      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_Send_Byte_Data

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                21    21      0     165
                                              2 COMRAM    21    21      0
                     _Send_Byte_Data
                  _inicializarSensor
 ---------------------------------------------------------------------------------
 (1) _inicializarSensor                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Send_Byte_Data                                       2     2      0      75
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Send_Byte_Data
   _inicializarSensor

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM_1           400      0       0      32        0.0%
BIGRAM             3F3      0       0      33        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      17        0.0%
BANK7              100      0       0      18        0.0%
BITBANK6           100      0       0      15        0.0%
BANK6              100      0       0      16        0.0%
BITBANK5           100      0       0      13        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK3            F4      0       0       9        0.0%
BANK3               F4      0       0      10        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0       0       4        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     17      19       1       26.3%
BITBIGSFR_1l        24      0       0      24        0.0%
BITBIGSFRlll        20      0       0      30        0.0%
BITBIGSFR_1h        12      0       0      23        0.0%
BITBIGSFR_5          D      0       0      19        0.0%
BITBIGSFRllh         8      0       0      29        0.0%
BITBIGSFRhh          6      0       0      25        0.0%
BITBIGSFRlhh         5      0       0      27        0.0%
BITBIGSFR_2h         3      0       0      22        0.0%
BITBIGSFR_4          3      0       0      20        0.0%
BITBIGSFR_3          3      0       0      21        0.0%
BITBIGSFRlhl         1      0       0      28        0.0%
BITBIGSFRhl          1      0       0      26        0.0%
BIGSFR_5             0      0       0     200        0.0%
BIGSFR_4             0      0       0     200        0.0%
BIGSFR_3             0      0       0     200        0.0%
BIGSFR_2             0      0       0     200        0.0%
BIGSFR_1             0      0       0     200        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      19      31        0.0%
DATA                 0      0      19      34        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Fri Mar 22 00:05:43 2024

                       l25 095A                         l43 0924                         l45 0908  
                       l47 090A                         l48 0928                         l58 0870  
                       u10 0902                         u11 08FE                         u20 0924  
                       u21 0920                         u50 081C                         u60 0830  
                       u70 086A                         u71 0866                         u80 08A8  
                       u81 08A4                         u90 08D8                         u91 08D4  
                      l800 088A                        l810 08B8                        l802 0892  
                      l740 0950                        l812 08BC                        l804 0898  
                      l742 0954                        l814 08D8                        l806 08A8  
                      l760 0914                        l744 0956                        l808 08AC  
                      l754 08EE                        l746 0958                        l756 0902  
                      l748 08EA                        l780 0846                        l758 090E  
                      l790 0858                        l782 084A                        l774 0812  
                      l792 085A                        l784 084E                        l776 083A  
                      l794 085C                        l786 0852                        l778 083E  
                      l796 086A                        l788 0856                        l798 0872  
                      u107 087C       main@contador_binario 0017                        wreg 0FE8  
              main@bicubic 000D                       _LATD 0F8C                       _TMR0 0FD6  
                     _main 0812                       fsr2h 0FDA                       indf2 0FDF  
                     fsr2l 0FD9                       start 0000               ___param_bank 0000  
        _inicializarSensor 0950         ?_inicializarSensor 0001                      ?_main 0001  
                    _TRISC 0F94                      _TRISD 0F95        ??_inicializarSensor 0001  
                    tablat 0FF5                      status 0FD8  __end_of_inicializarSensor 095C  
          __initialization 092A               __end_of_main 08E8                     ??_main 0003  
            __activetblptr 0001           ??_Send_Byte_Data 0001                     isa$std 0001  
             __pdataCOMRAM 0018               __mediumconst 0000                     tblptrh 0FF7  
                   tblptrl 0FF6                     tblptru 0FF8            Send_Byte_Data@i 0002  
               __accesstop 0060    __end_of__initialization 0942              ___rparam_used 0001  
           __pcstackCOMRAM 0001                 _acumulador 0018                    __Hparam 0000  
                  __Lparam 0000               __psmallconst 0800                    __pcinit 092A  
                  __ramtop 0800                    __ptext0 0812                    __ptext1 0950  
                  __ptext2 08E8                  _T0CONbits 0FD5       end_of_initialization 0942  
        __end_ofmain@F3224 0811          __end_ofmain@F3226 0809                    postinc2 0FDE  
                _PORTAbits 0F80                  _TRISAbits 0F92              __pidataCOMRAM 095C  
      start_initialization 092A                __smallconst 0800                   _LATAbits 0F89  
                 _LATCbits 0F8B                  main@F3224 0809                  main@F3226 0801  
               _ADCON1bits 0FC1            main@peaton_stop 0005             _Send_Byte_Data 08E8  
                 __Hrparam 0000                   __Lrparam 0000               __Lsmallconst 0800  
   __end_of_Send_Byte_Data 092A         Send_Byte_Data@b_m1 0001                   isa$xinst 0000  
          ?_Send_Byte_Data 0001               main@CONTADOR 0015  
