

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Tue Mar 19 14:01:10 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    13                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    15   000000                     
    16                           ; Generated 17/10/2023 GMT
    17                           ; 
    18                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution. Publication is not required when
    32                           ;        this file is used in an embedded application.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC18F4550 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50   000000                     
    51                           	psect	idataCOMRAM
    52   000930                     __pidataCOMRAM:
    53                           	callstack 0
    54                           
    55                           ;initializer for main@F3223
    56   000930  10                 	db	16
    57   000931  18                 	db	24
    58   000932  1C                 	db	28
    59   000933  FE                 	db	254
    60   000934  FE                 	db	254
    61   000935  1C                 	db	28
    62   000936  18                 	db	24
    63                           
    64                           ;initializer for _acumulador
    65   000937  0007               	dw	7
    66                           
    67                           	psect	smallconst
    68   000800                     __psmallconst:
    69                           	callstack 0
    70   000800  00                 	db	0
    71   000801                     main@F3225:
    72                           	callstack 0
    73   000801  01                 	db	1
    74   000802  E3                 	db	227
    75   000803  F7                 	db	247
    76   000804  E3                 	db	227
    77   000805  D5                 	db	213
    78   000806  F7                 	db	247
    79   000807  EB                 	db	235
    80   000808  EB                 	db	235
    81   000809                     __end_ofmain@F3225:
    82                           	callstack 0
    83   000000                     _LATC	set	3979
    84   000000                     _LATCbits	set	3979
    85   000000                     _ADCON1bits	set	4033
    86   000000                     _LATD	set	3980
    87   000000                     _TRISC	set	3988
    88   000000                     _TRISD	set	3989
    89   000809  00                 	db	0	; dummy byte at the end
    90   000000                     
    91                           ; #config settings
    92                           
    93                           	psect	cinit
    94   000902                     __pcinit:
    95                           	callstack 0
    96   000902                     start_initialization:
    97                           	callstack 0
    98   000902                     __initialization:
    99                           	callstack 0
   100                           
   101                           ; Initialize objects allocated to COMRAM (9 bytes)
   102                           ; load TBLPTR registers with __pidataCOMRAM
   103   000902  0E30               	movlw	low __pidataCOMRAM
   104   000904  6EF6               	movwf	tblptrl,c
   105   000906  0E09               	movlw	high __pidataCOMRAM
   106   000908  6EF7               	movwf	tblptrh,c
   107   00090A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   108   00090C  6EF8               	movwf	tblptru,c
   109   00090E  EE00  F016         	lfsr	0,__pdataCOMRAM
   110   000912  EE10 F009          	lfsr	1,9
   111   000916                     copy_data0:
   112   000916  0009               	tblrd		*+
   113   000918  CFF5 FFEE          	movff	tablat,postinc0
   114   00091C  50E5               	movf	postdec1,w,c
   115   00091E  50E1               	movf	fsr1l,w,c
   116   000920  E1FA               	bnz	copy_data0
   117   000922                     end_of_initialization:
   118                           	callstack 0
   119   000922                     __end_of__initialization:
   120                           	callstack 0
   121   000922  0E00               	movlw	low (__Lsmallconst shr (0+16))
   122   000924  6EF8               	movwf	tblptru,c
   123   000926  0E08               	movlw	high __Lsmallconst
   124   000928  6EF7               	movwf	tblptrh,c
   125   00092A  0100               	movlb	0
   126   00092C  EF05  F004         	goto	_main	;jump to C main() function
   127                           
   128                           	psect	dataCOMRAM
   129   000016                     __pdataCOMRAM:
   130                           	callstack 0
   131   000016                     main@F3223:
   132                           	callstack 0
   133   000016                     	ds	7
   134   00001D                     _acumulador:
   135                           	callstack 0
   136   00001D                     	ds	2
   137                           
   138                           	psect	cstackCOMRAM
   139   000001                     __pcstackCOMRAM:
   140                           	callstack 0
   141   000001                     Send_Byte_Data@b_m1:
   142                           	callstack 0
   143                           
   144                           ; 1 bytes @ 0x0
   145   000001                     	ds	1
   146   000002                     Send_Byte_Data@i:
   147                           	callstack 0
   148                           
   149                           ; 1 bytes @ 0x1
   150   000002                     	ds	1
   151   000003                     ??_main:
   152                           
   153                           ; 1 bytes @ 0x2
   154   000003                     	ds	1
   155   000004                     main@peaton_stop:
   156                           	callstack 0
   157                           
   158                           ; 8 bytes @ 0x3
   159   000004                     	ds	8
   160   00000C                     main@bicubic:
   161                           	callstack 0
   162                           
   163                           ; 7 bytes @ 0xB
   164   00000C                     	ds	7
   165   000013                     main@CONTADOR:
   166                           	callstack 0
   167                           
   168                           ; 2 bytes @ 0x12
   169   000013                     	ds	2
   170   000015                     main@contador_binario:
   171                           	callstack 0
   172                           
   173                           ; 1 bytes @ 0x14
   174   000015                     	ds	1
   175                           
   176 ;;
   177 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   178 ;;
   179 ;; *************** function _main *****************
   180 ;; Defined at:
   181 ;;		line 104 in file "pruebilla.c"
   182 ;; Parameters:    Size  Location     Type
   183 ;;		None
   184 ;; Auto vars:     Size  Location     Type
   185 ;;  peaton_stop     8    3[COMRAM] const unsigned char [8]
   186 ;;  bicubic         7   11[COMRAM] unsigned char [7]
   187 ;;  CONTADOR        2   18[COMRAM] int 
   188 ;;  contador_bin    1   20[COMRAM] unsigned char 
   189 ;; Return value:  Size  Location     Type
   190 ;;                  1    wreg      void 
   191 ;; Registers used:
   192 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   193 ;; Tracked objects:
   194 ;;		On entry : 0/0
   195 ;;		On exit  : 0/0
   196 ;;		Unchanged: 0/0
   197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   198 ;;      Params:         0       0       0       0       0       0       0       0       0
   199 ;;      Locals:        18       0       0       0       0       0       0       0       0
   200 ;;      Temps:          1       0       0       0       0       0       0       0       0
   201 ;;      Totals:        19       0       0       0       0       0       0       0       0
   202 ;;Total ram usage:       19 bytes
   203 ;; Hardware stack levels required when called: 1
   204 ;; This function calls:
   205 ;;		_Send_Byte_Data
   206 ;; This function is called by:
   207 ;;		Startup code after reset
   208 ;; This function uses a non-reentrant model
   209 ;;
   210                           
   211                           	psect	text0
   212   00080A                     __ptext0:
   213                           	callstack 0
   214   00080A                     _main:
   215                           	callstack 30
   216   00080A                     
   217                           ;pruebilla.c: 105:     unsigned char bicubic[7]={0x10,0x18,0x1c,0xfe,0xfe,0x1c,0x18,0x10
      +                          };
   218   00080A  EE20  F016         	lfsr	2,main@F3223
   219   00080E  EE10  F00C         	lfsr	1,main@bicubic
   220   000812  0E06               	movlw	6
   221   000814                     u61:
   222   000814  CFDB FFE3          	movff	plusw2,plusw1
   223   000818  06E8               	decf	wreg,f,c
   224   00081A  E2FC               	bc	u61
   225   00081C                     
   226                           ;pruebilla.c: 109:     const uint8_t peaton_stop[8] = {0x01, 0xe3, 0xf7, 0xe3, 0xd5, 0xf
      +                          7, 0xeb, 0xeb};
   227   00081C  0E01               	movlw	low main@F3225
   228   00081E  6EF6               	movwf	tblptrl,c
   229   000820                     	if	0	;There is only one active tblptr byte
   230   000820                     	endif
   231   000820                     	if	0	;There are less than 3 active tblptr bytes
   232   000820                     	endif
   233   000820  EE20  F004         	lfsr	2,main@peaton_stop
   234   000824  0E07               	movlw	7
   235   000826                     u70:
   236   000826  0009               	tblrd		*+
   237   000828  CFF5 FFDE          	movff	tablat,postinc2
   238   00082C  06E8               	decf	wreg,f,c
   239   00082E  E2FB               	bc	u70
   240   000830                     
   241                           ;pruebilla.c: 110:     uint8_t contador_binario=0x80;
   242   000830  0E80               	movlw	128
   243   000832  6E15               	movwf	main@contador_binario^0,c
   244   000834                     
   245                           ;pruebilla.c: 111:     int CONTADOR =0;
   246   000834  0E00               	movlw	0
   247   000836  6E14               	movwf	(main@CONTADOR+1)^0,c
   248   000838  0E00               	movlw	0
   249   00083A  6E13               	movwf	main@CONTADOR^0,c
   250   00083C                     
   251                           ;pruebilla.c: 112:     ADCON1bits.PCFG=0x0f;
   252   00083C  0E0F               	movlw	15
   253   00083E  12C1               	iorwf	193,f,c	;volatile
   254   000840                     
   255                           ;pruebilla.c: 113:     TRISD = 0x00;
   256   000840  0E00               	movlw	0
   257   000842  6E95               	movwf	149,c	;volatile
   258   000844                     
   259                           ;pruebilla.c: 114:     TRISC = 0x00;
   260   000844  0E00               	movlw	0
   261   000846  6E94               	movwf	148,c	;volatile
   262   000848                     
   263                           ;pruebilla.c: 115:     LATD = 0x00;
   264   000848  0E00               	movlw	0
   265   00084A  6E8C               	movwf	140,c	;volatile
   266   00084C                     
   267                           ;pruebilla.c: 116:     LATC = 0x00;
   268   00084C  0E00               	movlw	0
   269   00084E  6E8B               	movwf	139,c	;volatile
   270   000850                     
   271                           ;pruebilla.c: 117:     LATCbits.LC6=1;
   272   000850  8C8B               	bsf	139,6,c	;volatile
   273   000852                     l789:
   274                           
   275                           ;pruebilla.c: 121:     {;pruebilla.c: 122:         _delay((unsigned long)((1)*(48000000/
      +                          4000.0)));
   276   000852  0E10               	movlw	16
   277   000854  6E03               	movwf	??_main^0,c
   278   000856  0E94               	movlw	148
   279   000858                     u107:
   280   000858  2EE8               	decfsz	wreg,f,c
   281   00085A  D7FE               	bra	u107
   282   00085C  2E03               	decfsz	??_main^0,f,c
   283   00085E  D7FC               	bra	u107
   284   000860  D000               	nop2	
   285   000862                     
   286                           ;pruebilla.c: 125:         Send_Byte_Data(~contador_binario);
   287   000862  5015               	movf	main@contador_binario^0,w,c
   288   000864  0AFF               	xorlw	255
   289   000866  EC60  F004         	call	_Send_Byte_Data
   290   00086A                     
   291                           ;pruebilla.c: 126:         contador_binario=contador_binario>>1;
   292   00086A  90D8               	bcf	status,0,c
   293   00086C  3015               	rrcf	main@contador_binario^0,w,c
   294   00086E  6E15               	movwf	main@contador_binario^0,c
   295   000870                     
   296                           ;pruebilla.c: 127:         if(contador_binario==0x00){
   297   000870  5015               	movf	main@contador_binario^0,w,c
   298   000872  A4D8               	btfss	status,2,c
   299   000874  EF3E  F004         	goto	u81
   300   000878  EF40  F004         	goto	u80
   301   00087C                     u81:
   302   00087C  EF42  F004         	goto	l799
   303   000880                     u80:
   304   000880                     
   305                           ;pruebilla.c: 128:             contador_binario=0x80;
   306   000880  0E80               	movlw	128
   307   000882  6E15               	movwf	main@contador_binario^0,c
   308   000884                     l799:
   309                           
   310                           ;pruebilla.c: 130:         LATD=bicubic[CONTADOR];
   311   000884  5013               	movf	main@CONTADOR^0,w,c
   312   000886  0F0C               	addlw	low main@bicubic
   313   000888  6ED9               	movwf	fsr2l,c
   314   00088A  6ADA               	clrf	fsr2h,c
   315   00088C  50DF               	movf	indf2,w,c
   316   00088E  6E8C               	movwf	140,c	;volatile
   317   000890                     
   318                           ;pruebilla.c: 131:         CONTADOR++;
   319   000890  4A13               	infsnz	main@CONTADOR^0,f,c
   320   000892  2A14               	incf	(main@CONTADOR+1)^0,f,c
   321   000894                     
   322                           ;pruebilla.c: 132:         if(CONTADOR>7)
   323   000894  BE14               	btfsc	(main@CONTADOR+1)^0,7,c
   324   000896  EF56  F004         	goto	u91
   325   00089A  5014               	movf	(main@CONTADOR+1)^0,w,c
   326   00089C  E109               	bnz	u90
   327   00089E  0E08               	movlw	8
   328   0008A0  5C13               	subwf	main@CONTADOR^0,w,c
   329   0008A2  A0D8               	btfss	status,0,c
   330   0008A4  EF56  F004         	goto	u91
   331   0008A8  EF58  F004         	goto	u90
   332   0008AC                     u91:
   333   0008AC  EF29  F004         	goto	l789
   334   0008B0                     u90:
   335   0008B0                     
   336                           ;pruebilla.c: 133:         {;pruebilla.c: 134:             CONTADOR=0;
   337   0008B0  0E00               	movlw	0
   338   0008B2  6E14               	movwf	(main@CONTADOR+1)^0,c
   339   0008B4  0E00               	movlw	0
   340   0008B6  6E13               	movwf	main@CONTADOR^0,c
   341   0008B8  EF29  F004         	goto	l789
   342   0008BC  EF00  F000         	goto	start
   343   0008C0                     __end_of_main:
   344                           	callstack 0
   345                           
   346 ;; *************** function _Send_Byte_Data *****************
   347 ;; Defined at:
   348 ;;		line 92 in file "pruebilla.c"
   349 ;; Parameters:    Size  Location     Type
   350 ;;  b_m1            1    wreg     unsigned char 
   351 ;; Auto vars:     Size  Location     Type
   352 ;;  b_m1            1    0[COMRAM] unsigned char 
   353 ;;  i               1    1[COMRAM] unsigned char 
   354 ;; Return value:  Size  Location     Type
   355 ;;                  1    wreg      void 
   356 ;; Registers used:
   357 ;;		wreg, status,2, status,0
   358 ;; Tracked objects:
   359 ;;		On entry : 0/0
   360 ;;		On exit  : 0/0
   361 ;;		Unchanged: 0/0
   362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   363 ;;      Params:         0       0       0       0       0       0       0       0       0
   364 ;;      Locals:         2       0       0       0       0       0       0       0       0
   365 ;;      Temps:          0       0       0       0       0       0       0       0       0
   366 ;;      Totals:         2       0       0       0       0       0       0       0       0
   367 ;;Total ram usage:        2 bytes
   368 ;; Hardware stack levels used: 1
   369 ;; This function calls:
   370 ;;		Nothing
   371 ;; This function is called by:
   372 ;;		_main
   373 ;; This function uses a non-reentrant model
   374 ;;
   375                           
   376                           	psect	text1
   377   0008C0                     __ptext1:
   378                           	callstack 0
   379   0008C0                     _Send_Byte_Data:
   380                           	callstack 30
   381                           
   382                           ;incstack = 0
   383                           ;Send_Byte_Data@b_m1 stored from wreg
   384   0008C0  6E01               	movwf	Send_Byte_Data@b_m1^0,c
   385   0008C2                     
   386                           ;pruebilla.c: 92: void Send_Byte_Data(uint8_t b_m1);pruebilla.c: 93: {;pruebilla.c: 94: 
      +                              for(uint8_t i=0x80; i>0; i=i>>1)
   387   0008C2  0E80               	movlw	128
   388   0008C4  6E02               	movwf	Send_Byte_Data@i^0,c
   389   0008C6                     l739:
   390                           
   391                           ;pruebilla.c: 95:     {;pruebilla.c: 96:         (b_m1 & i) ? (LATCbits.LC2 = 1) : (LATC
      +                          bits.LC2 = 0);
   392   0008C6  5001               	movf	Send_Byte_Data@b_m1^0,w,c
   393   0008C8  1402               	andwf	Send_Byte_Data@i^0,w,c
   394   0008CA  0900               	iorlw	0
   395   0008CC  B4D8               	btfsc	status,2,c
   396   0008CE  EF6B  F004         	goto	u11
   397   0008D2  EF6D  F004         	goto	u10
   398   0008D6                     u11:
   399   0008D6  EF70  F004         	goto	l36
   400   0008DA                     u10:
   401   0008DA  848B               	bsf	139,2,c	;volatile
   402   0008DC  EF71  F004         	goto	l38
   403   0008E0                     l36:
   404   0008E0  948B               	bcf	139,2,c	;volatile
   405   0008E2                     l38:
   406                           
   407                           ;pruebilla.c: 97:         LATCbits.LC0 = 1;
   408   0008E2  808B               	bsf	139,0,c	;volatile
   409                           
   410                           ;pruebilla.c: 98:         LATCbits.LC0 = 0;
   411   0008E4  908B               	bcf	139,0,c	;volatile
   412   0008E6                     
   413                           ;pruebilla.c: 99:     }
   414   0008E6  90D8               	bcf	status,0,c
   415   0008E8  3002               	rrcf	Send_Byte_Data@i^0,w,c
   416   0008EA  6E02               	movwf	Send_Byte_Data@i^0,c
   417   0008EC  5002               	movf	Send_Byte_Data@i^0,w,c
   418   0008EE  A4D8               	btfss	status,2,c
   419   0008F0  EF7C  F004         	goto	u21
   420   0008F4  EF7E  F004         	goto	u20
   421   0008F8                     u21:
   422   0008F8  EF63  F004         	goto	l739
   423   0008FC                     u20:
   424   0008FC                     
   425                           ;pruebilla.c: 100:     LATCbits.LC1 = 1;
   426   0008FC  828B               	bsf	139,1,c	;volatile
   427                           
   428                           ;pruebilla.c: 101:     LATCbits.LC1 = 0;
   429   0008FE  928B               	bcf	139,1,c	;volatile
   430   000900  0012               	return		;funcret
   431   000902                     __end_of_Send_Byte_Data:
   432                           	callstack 0
   433                           
   434                           	psect	rparam
   435   000000                     
   436                           	psect	config
   437                           
   438                           ;Config register CONFIG1L @ 0x300000
   439                           ;	PLL Prescaler Selection bits
   440                           ;	PLLDIV = 2, Divide by 2 (8 MHz oscillator input)
   441                           ;	System Clock Postscaler Selection bits
   442                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
   443                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
   444                           ;	USBDIV = 2, USB clock source comes from the 96 MHz PLL divided by 2
   445   300000                     	org	3145728
   446   300000  21                 	db	33
   447                           
   448                           ;Config register CONFIG1H @ 0x300001
   449                           ;	Oscillator Selection bits
   450                           ;	FOSC = HSPLL_HS, HS oscillator, PLL enabled (HSPLL)
   451                           ;	Fail-Safe Clock Monitor Enable bit
   452                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   453                           ;	Internal/External Oscillator Switchover bit
   454                           ;	IESO = OFF, Oscillator Switchover mode disabled
   455   300001                     	org	3145729
   456   300001  0E                 	db	14
   457                           
   458                           ;Config register CONFIG2L @ 0x300002
   459                           ;	Power-up Timer Enable bit
   460                           ;	PWRT = OFF, PWRT disabled
   461                           ;	Brown-out Reset Enable bits
   462                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
   463                           ;	Brown-out Reset Voltage bits
   464                           ;	BORV = 3, Minimum setting 2.05V
   465                           ;	USB Voltage Regulator Enable bit
   466                           ;	VREGEN = OFF, USB voltage regulator disabled
   467   300002                     	org	3145730
   468   300002  19                 	db	25
   469                           
   470                           ;Config register CONFIG2H @ 0x300003
   471                           ;	Watchdog Timer Enable bit
   472                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   473                           ;	Watchdog Timer Postscale Select bits
   474                           ;	WDTPS = 32768, 1:32768
   475   300003                     	org	3145731
   476   300003  1E                 	db	30
   477                           
   478                           ; Padding undefined space
   479   300004                     	org	3145732
   480   300004  FF                 	db	255
   481                           
   482                           ;Config register CONFIG3H @ 0x300005
   483                           ;	CCP2 MUX bit
   484                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
   485                           ;	PORTB A/D Enable bit
   486                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
   487                           ;	Low-Power Timer 1 Oscillator Enable bit
   488                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   489                           ;	MCLR Pin Enable bit
   490                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   491   300005                     	org	3145733
   492   300005  81                 	db	129
   493                           
   494                           ;Config register CONFIG4L @ 0x300006
   495                           ;	Stack Full/Underflow Reset Enable bit
   496                           ;	STVREN = ON, Stack full/underflow will cause Reset
   497                           ;	Single-Supply ICSP Enable bit
   498                           ;	LVP = OFF, Single-Supply ICSP disabled
   499                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
   500                           ;	ICPRT = OFF, ICPORT disabled
   501                           ;	Extended Instruction Set Enable bit
   502                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   503                           ;	Background Debugger Enable bit
   504                           ;	DEBUG = 0x1, unprogrammed default
   505   300006                     	org	3145734
   506   300006  81                 	db	129
   507                           
   508                           ; Padding undefined space
   509   300007                     	org	3145735
   510   300007  FF                 	db	255
   511                           
   512                           ;Config register CONFIG5L @ 0x300008
   513                           ;	Code Protection bit
   514                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
   515                           ;	Code Protection bit
   516                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
   517                           ;	Code Protection bit
   518                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
   519                           ;	Code Protection bit
   520                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
   521   300008                     	org	3145736
   522   300008  0F                 	db	15
   523                           
   524                           ;Config register CONFIG5H @ 0x300009
   525                           ;	Boot Block Code Protection bit
   526                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
   527                           ;	Data EEPROM Code Protection bit
   528                           ;	CPD = OFF, Data EEPROM is not code-protected
   529   300009                     	org	3145737
   530   300009  C0                 	db	192
   531                           
   532                           ;Config register CONFIG6L @ 0x30000A
   533                           ;	Write Protection bit
   534                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
   535                           ;	Write Protection bit
   536                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
   537                           ;	Write Protection bit
   538                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
   539                           ;	Write Protection bit
   540                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
   541   30000A                     	org	3145738
   542   30000A  0F                 	db	15
   543                           
   544                           ;Config register CONFIG6H @ 0x30000B
   545                           ;	Configuration Register Write Protection bit
   546                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
   547                           ;	Boot Block Write Protection bit
   548                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
   549                           ;	Data EEPROM Write Protection bit
   550                           ;	WRTD = OFF, Data EEPROM is not write-protected
   551   30000B                     	org	3145739
   552   30000B  E0                 	db	224
   553                           
   554                           ;Config register CONFIG7L @ 0x30000C
   555                           ;	Table Read Protection bit
   556                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
   557                           ;	Table Read Protection bit
   558                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
   559                           ;	Table Read Protection bit
   560                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
   561                           ;	Table Read Protection bit
   562                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
   563   30000C                     	org	3145740
   564   30000C  0F                 	db	15
   565                           
   566                           ;Config register CONFIG7H @ 0x30000D
   567                           ;	Boot Block Table Read Protection bit
   568                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
   569   30000D                     	org	3145741
   570   30000D  40                 	db	64
   571                           tosu	equ	0xFFF
   572                           tosh	equ	0xFFE
   573                           tosl	equ	0xFFD
   574                           stkptr	equ	0xFFC
   575                           pclatu	equ	0xFFB
   576                           pclath	equ	0xFFA
   577                           pcl	equ	0xFF9
   578                           tblptru	equ	0xFF8
   579                           tblptrh	equ	0xFF7
   580                           tblptrl	equ	0xFF6
   581                           tablat	equ	0xFF5
   582                           prodh	equ	0xFF4
   583                           prodl	equ	0xFF3
   584                           indf0	equ	0xFEF
   585                           postinc0	equ	0xFEE
   586                           postdec0	equ	0xFED
   587                           preinc0	equ	0xFEC
   588                           plusw0	equ	0xFEB
   589                           fsr0h	equ	0xFEA
   590                           fsr0l	equ	0xFE9
   591                           wreg	equ	0xFE8
   592                           indf1	equ	0xFE7
   593                           postinc1	equ	0xFE6
   594                           postdec1	equ	0xFE5
   595                           preinc1	equ	0xFE4
   596                           plusw1	equ	0xFE3
   597                           fsr1h	equ	0xFE2
   598                           fsr1l	equ	0xFE1
   599                           bsr	equ	0xFE0
   600                           indf2	equ	0xFDF
   601                           postinc2	equ	0xFDE
   602                           postdec2	equ	0xFDD
   603                           preinc2	equ	0xFDC
   604                           plusw2	equ	0xFDB
   605                           fsr2h	equ	0xFDA
   606                           fsr2l	equ	0xFD9
   607                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    8
    Data        9
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     21      30
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           244      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_Send_Byte_Data

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                19    19      0     165
                                              2 COMRAM    19    19      0
                     _Send_Byte_Data
 ---------------------------------------------------------------------------------
 (1) _Send_Byte_Data                                       2     2      0      75
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Send_Byte_Data

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM_1           400      0       0      29        0.0%
BIGRAM             3F3      0       0      30        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      17        0.0%
BANK7              100      0       0      18        0.0%
BITBANK6           100      0       0      15        0.0%
BANK6              100      0       0      16        0.0%
BITBANK5           100      0       0      13        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK3            F4      0       0       9        0.0%
BANK3               F4      0       0      10        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0       0       4        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     15      1E       1       31.6%
BITBIGSFRl          2B      0       0      27        0.0%
BITBIGSFR_1l        24      0       0      24        0.0%
BITBIGSFR_1h        12      0       0      23        0.0%
BITBIGSFR_5          D      0       0      19        0.0%
BITBIGSFRhl          7      0       0      26        0.0%
BITBIGSFRhh          6      0       0      25        0.0%
BITBIGSFR_2          6      0       0      22        0.0%
BITBIGSFR_4          3      0       0      20        0.0%
BITBIGSFR_3          3      0       0      21        0.0%
BIGSFR_5             0      0       0     200        0.0%
BIGSFR_4             0      0       0     200        0.0%
BIGSFR_3             0      0       0     200        0.0%
BIGSFR_2             0      0       0     200        0.0%
BIGSFR_1             0      0       0     200        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      1E      28        0.0%
DATA                 0      0      1E      31        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Tue Mar 19 14:01:10 2024

                     l34 08FC                       l36 08E0                       l38 08E2  
                     l39 0900                       u10 08DA                       u11 08D6  
                     u20 08FC                       u21 08F8                       u61 0814  
                     u70 0826                       u80 0880                       u81 087C  
                     u90 08B0                       u91 08AC                      l801 0890  
                    l803 0894                      l741 08DA                      l733 08C2  
                    l805 08B0                      l743 08E6                      l745 08EC  
                    l739 08C6                      l771 081C                      l781 0844  
                    l773 0830                      l791 0862                      l783 0848  
                    l775 0834                      l793 086A                      l785 084C  
                    l777 083C                      l769 080A                      l795 0870  
                    l787 0850                      l779 0840                      l797 0880  
                    l789 0852                      l799 0884                      u107 0858  
   main@contador_binario 0015                      wreg 0FE8              main@bicubic 000C  
                   _LATC 0F8B                     _LATD 0F8C                     _main 080A  
                   fsr2h 0FDA                     indf2 0FDF                     fsr1l 0FE1  
                   fsr2l 0FD9                     start 0000             ___param_bank 0000  
                  ?_main 0001                    _TRISC 0F94                    _TRISD 0F95  
                  tablat 0FF5                    plusw1 0FE3                    plusw2 0FDB  
                  status 0FD8          __initialization 0902             __end_of_main 08C0  
                 ??_main 0003            __activetblptr 0001         ??_Send_Byte_Data 0001  
                 isa$std 0001             __pdataCOMRAM 0016             __mediumconst 0000  
                 tblptrh 0FF7                   tblptrl 0FF6                   tblptru 0FF8  
        Send_Byte_Data@i 0002               __accesstop 0060  __end_of__initialization 0922  
          ___rparam_used 0001           __pcstackCOMRAM 0001               _acumulador 001D  
                __Hparam 0000                  __Lparam 0000             __psmallconst 0800  
                __pcinit 0902                  __ramtop 0800                  __ptext0 080A  
                __ptext1 08C0     end_of_initialization 0922        __end_ofmain@F3225 0809  
                postdec1 0FE5                  postinc0 0FEE                  postinc2 0FDE  
          __pidataCOMRAM 0930      start_initialization 0902              __smallconst 0800  
               _LATCbits 0F8B                main@F3223 0016                main@F3225 0801  
             _ADCON1bits 0FC1                copy_data0 0916          main@peaton_stop 0004  
         _Send_Byte_Data 08C0                 __Hrparam 0000                 __Lrparam 0000  
           __Lsmallconst 0800   __end_of_Send_Byte_Data 0902       Send_Byte_Data@b_m1 0001  
               isa$xinst 0000          ?_Send_Byte_Data 0001             main@CONTADOR 0013  
